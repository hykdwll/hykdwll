<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阳的树屋</title>
  
  <subtitle>分享网络技术、软件使用与系统优化的实用指南</subtitle>
  <link href="https://www.eryang.top/atom.xml" rel="self"/>
  
  <link href="https://www.eryang.top/"/>
  <updated>2025-08-12T15:28:52.428Z</updated>
  <id>https://www.eryang.top/</id>
  
  <author>
    <name>二阳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在 ARM 架构 Linux 系统上安装 ddns-go 实现动态 DNS</title>
    <link href="https://www.eryang.top/2025/08/12/arm-ddns-go/"/>
    <id>https://www.eryang.top/2025/08/12/arm-ddns-go/</id>
    <published>2025-08-11T16:19:08.000Z</published>
    <updated>2025-08-12T15:28:52.428Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在-ARM-Linux-系统上安装-ddns-go-的详细教程"><a href="#在-ARM-Linux-系统上安装-ddns-go-的详细教程" class="headerlink" title="在 ARM Linux 系统上安装 ddns-go 的详细教程"></a>在 ARM Linux 系统上安装 ddns-go 的详细教程</h1><p>如果你需要在 ARM 架构的 Linux 系统（如树莓派等设备）上安装 ddns-go 来实现动态 DNS 功能，那么这篇教程将为你提供清晰的步骤指引。ddns-go 是一款好用的动态 DNS 客户端工具，支持多种 DNS 提供商，下面就来看看具体的安装过程。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始安装前，请确保你的 ARM Linux 系统已连接网络，并且具备基本的命令行操作环境。同时，你需要拥有系统的管理员权限（sudo 权限），以便执行后续的安装和配置操作。</p><h2 id="步骤一：将根文件系统挂载为读写模式"><a href="#步骤一：将根文件系统挂载为读写模式" class="headerlink" title="步骤一：将根文件系统挂载为读写模式"></a>步骤一：将根文件系统挂载为读写模式</h2><p>部分 Linux 系统（如 PiKVM 系统）的根文件系统默认可能处于只读模式，为了顺利安装软件，我们需要先将其临时切换为读写模式。</p><p>在终端中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rw<br></code></pre></td></tr></table></figure><p>这个命令会重新挂载根文件系统，使其处于可读写状态，方便我们进行文件的下载和操作。</p><h2 id="步骤二：下载并解压-ddns-go"><a href="#步骤二：下载并解压-ddns-go" class="headerlink" title="步骤二：下载并解压 ddns-go"></a>步骤二：下载并解压 ddns-go</h2><ol><li>首先，切换到合适的安装目录，这里我们选择 <code>/usr/local/bin</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/bin<br></code></pre></td></tr></table></figure><ol start="2"><li>下载 ddns-go 的 ARM 架构版本压缩包。这里以 v6.12.2 版本为例，你可以根据需要到 <a href="https://github.com/jeessy2/ddns-go/releases">ddns-</a><a href="https://github.com/jeessy2/ddns-go/releases">go 的</a><a href="https://github.com/jeessy2/ddns-go/releases"> GitHu</a><a href="https://github.com/jeessy2/ddns-go/releases">b</a><a href="https://github.com/jeessy2/ddns-go/releases"> 发布页</a><a href="https://github.com/jeessy2/ddns-go/releases">面</a> 查看最新版本：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/jeessy2/ddns-go/releases/download/v6.12.2/ddns-go_6.12.2_linux_arm64.tar.gz<br></code></pre></td></tr></table></figure><ol start="3"><li>解压下载好的压缩包：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf ddns-go_6.12.2_linux_arm64.tar.gz<br></code></pre></td></tr></table></figure><ol start="4"><li>为解压后的可执行文件赋予执行权限：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x ddns-go<br></code></pre></td></tr></table></figure><ol start="5"><li>（可选）如果你之前将根文件系统切换为了读写模式，现在可以将其恢复为只读模式：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ro<br></code></pre></td></tr></table></figure><h2 id="步骤三：将-ddns-go-安装为系统服务"><a href="#步骤三：将-ddns-go-安装为系统服务" class="headerlink" title="步骤三：将 ddns-go 安装为系统服务"></a>步骤三：将 ddns-go 安装为系统服务</h2><p>为了让 ddns-go 能够在系统开机时自动启动，我们可以将其配置为 systemd 服务。</p><ol><li>创建并编辑服务文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano /etc/systemd/system/ddns-go.service<br></code></pre></td></tr></table></figure><ol start="2"><li>在打开的编辑器中输入以下内容：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br><br>Description=DDNS-Go Dynamic DNS Client<br><br>After=network.target<br><br>[Service]<br><br>Type=simple<br><br>ExecStart=/usr/local/bin/ddns-go -l :9876 -f 120 -c /root/.ddns_go_config.yaml<br><br>Restart=always<br><br>[Install]<br><br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>输入完成后，按 <code>Ctrl+O</code> 保存，再按 <code>Ctrl+X</code> 退出编辑器。</p><h2 id="步骤四：启动并设置开机自启服务"><a href="#步骤四：启动并设置开机自启服务" class="headerlink" title="步骤四：启动并设置开机自启服务"></a>步骤四：启动并设置开机自启服务</h2><ol><li>重新加载 systemd 配置，使新创建的服务文件生效：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br></code></pre></td></tr></table></figure><ol start="2"><li>设置 ddns-go 服务开机自启：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> ddns-go<br></code></pre></td></tr></table></figure><ol start="3"><li>启动 ddns-go 服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start ddns-go<br></code></pre></td></tr></table></figure><h2 id="步骤五：访问-Web-界面进行配置"><a href="#步骤五：访问-Web-界面进行配置" class="headerlink" title="步骤五：访问 Web 界面进行配置"></a>步骤五：访问 Web 界面进行配置</h2><ol><li><p>打开浏览器，输入 <code>http://&lt;你的设备IP地址&gt;:9876</code> 访问 ddns-go 的 Web 管理界面。其中 <code>&lt;你的设备IP地址&gt;</code> 需要替换为你 ARM Linux 设备的实际 IP 地址。</p></li><li><p>在 Web 界面中，你可以根据自己的需求配置 DNS 提供商（如阿里云、Cloudflare 等）以及对应的域名记录。按照界面上的提示填写相关信息，完成后保存配置即可。</p></li></ol><p>通过以上步骤，你就成功在 ARM Linux 系统上安装并配置好了 ddns-go，它将帮助你自动更新域名对应的 IP 地址，非常适合需要动态解析 IP 的场景。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;在-ARM-Linux-系统上安装-ddns-go-的详细教程&quot;&gt;&lt;a href=&quot;#在-ARM-Linux-系统上安装-ddns-go-的详细教程&quot; class=&quot;headerlink&quot; title=&quot;在 ARM Linux 系统上安装 ddns-go 的详细教</summary>
      
    
    
    
    <category term="技术教程" scheme="https://www.eryang.top/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="ARM Linux" scheme="https://www.eryang.top/tags/ARM-Linux/"/>
    
    <category term="ddns-go" scheme="https://www.eryang.top/tags/ddns-go/"/>
    
    <category term="动态域名" scheme="https://www.eryang.top/tags/%E5%8A%A8%E6%80%81%E5%9F%9F%E5%90%8D/"/>
    
    <category term="树莓派" scheme="https://www.eryang.top/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    <category term="Orange Pi" scheme="https://www.eryang.top/tags/Orange-Pi/"/>
    
  </entry>
  
  <entry>
    <title>发布个人开源项目：SunNav 智能搜索导航网站</title>
    <link href="https://www.eryang.top/2025/08/09/sunnav/"/>
    <id>https://www.eryang.top/2025/08/09/sunnav/</id>
    <published>2025-08-09T14:40:28.000Z</published>
    <updated>2025-08-09T15:49:36.855Z</updated>
    
    <content type="html"><![CDATA[<p>今天很高兴向大家宣布，我开发的个人开源项目 ——<strong>SunNav</strong> 正式上线了！这是一个现代化的智能搜索导航网站，旨在帮助用户更高效地访问常用网站和管理书签，同时提供个性化的搜索体验。如果你厌倦了繁琐的网址输入和杂乱的书签管理，不妨来试试 SunNav 带来的全新体验。</p><p><img src="https://upyun.eryang.top/images/1754753128953_sunnav1.png" alt="SunNav 首页展示"></p><h1 id="SunNav"><a href="#SunNav" class="headerlink" title="SunNav"></a>SunNav</h1><p>一个现代化的智能搜索导航网站，帮助用户快速访问常用网站和书签，支持书签管理和个性化搜索体验。</p><h3 id="在线体验地址"><a href="#在线体验地址" class="headerlink" title="在线体验地址"></a>在线体验地址</h3><p><strong><a href="https://sunnav.eryang.top/">https://sunnav.eryang.top</a></strong></p><p>账号：demo 密码：demo123</p><h2 id="🌟-功能特性"><a href="#🌟-功能特性" class="headerlink" title="🌟 功能特性"></a>🌟 功能特性</h2><h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h3><ul><li><strong>智能搜索</strong>：支持多个搜索引擎的快速切换</li><li><strong>书签管理</strong>：添加、编辑、删除、分类管理书签</li><li><strong>标签系统</strong>：为书签添加标签，便于分类和搜索</li><li><strong>收藏功能</strong>：收藏重要书签，快速访问</li><li><strong>图标识别</strong>：自动获取网站图标，视觉识别更直观</li><li><strong>响应式设计</strong>：完美适配桌面端和移动端</li></ul><h3 id="用户功能"><a href="#用户功能" class="headerlink" title="用户功能"></a>用户功能</h3><ul><li><strong>用户认证</strong>：注册、登录、退出系统</li><li><strong>个性化</strong>：自定义搜索引擎偏好</li><li><strong>数据同步</strong>：登录后书签数据云端同步</li><li><strong>快捷操作</strong>：支持键盘快捷键（按&#x2F;键快速聚焦搜索框）</li></ul><h2 id="🛠️-技术栈"><a href="#🛠️-技术栈" class="headerlink" title="🛠️ 技术栈"></a>🛠️ 技术栈</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul><li><strong>React 18</strong> - 现代化前端框架</li><li><strong>TypeScript</strong> - 类型安全的 JavaScript</li><li><strong>Tailwind CSS</strong> - 原子化 CSS 框架</li><li><strong>Heroicons</strong> - 精美的图标库</li><li><strong>Axios</strong> - HTTP 客户端</li></ul><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><ul><li><strong>Node.js</strong> - JavaScript 运行时</li><li><strong>Express</strong> - Web 应用框架</li><li><strong>MySQL</strong> - 关系型数据库</li><li><strong>JWT</strong> - 用户认证</li><li><strong>Bcrypt</strong> - 密码加密</li></ul><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ul><li><strong>Vercel</strong> - 前端部署</li><li><strong>数据库</strong> - 支持 PlanetScale、Railway 等云数据库</li></ul><h2 id="🚀-快速开始"><a href="#🚀-快速开始" class="headerlink" title="🚀 快速开始"></a>🚀 快速开始</h2><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><ul><li>Node.js 16+</li><li>MySQL 5.7+</li><li>npm 或 yarn 包管理器</li></ul><h3 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h3><ol><li><strong>克隆项目</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/yourusername/SunNav.git<br><span class="hljs-built_in">cd</span> SunNav<br></code></pre></td></tr></table></figure><ol start="2"><li><strong>安装依赖</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装后端依赖</span><br>npm install<br><br><span class="hljs-comment"># 安装前端依赖</span><br><span class="hljs-built_in">cd</span> client<br>npm install<br></code></pre></td></tr></table></figure><ol start="3"><li><strong>环境配置</strong></li></ol><p>创建<code>.env</code>文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs env"># 数据库配置<br>DB_HOST=localhost<br>DB_USER=your_username<br>DB_PASSWORD=your_password<br>DB_NAME=sunnav<br>DB_PORT=3306<br><br># JWT密钥<br>JWT_SECRET=your_jwt_secret_key<br><br># 端口配置<br>PORT=3000<br></code></pre></td></tr></table></figure><ol start="4"><li><strong>数据库初始化</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 导入数据库结构</span><br>mysql -u your_username -p sunnav &lt; database/schema.sql<br><br><span class="hljs-comment"># 初始化管理员账户</span><br>npm run init-admin<br></code></pre></td></tr></table></figure><ol start="5"><li><strong>启动开发服务器</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动后端服务器</span><br>npm run dev<br><br><span class="hljs-comment"># 启动前端开发服务器（新终端）</span><br><span class="hljs-built_in">cd</span> client<br>npm start<br></code></pre></td></tr></table></figure><p>访问 <a href="http://localhost:3000/">http://localhost:3000</a> 开始使用</p><h2 id="📄-许可证"><a href="#📄-许可证" class="headerlink" title="📄 许可证"></a>📄 许可证</h2><p>本项目采用 <a href="LICENSE">MIT 许可证</a> 开源，您可以自由使用、修改和分发。</p><h2 id="🤝-贡献"><a href="#🤝-贡献" class="headerlink" title="🤝 贡献"></a>🤝 贡献</h2><p>欢迎提交 Issue 和 Pull Request 来帮助改进这个项目！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天很高兴向大家宣布，我开发的个人开源项目 ——&lt;strong&gt;SunNav&lt;/strong&gt; 正式上线了！这是一个现代化的智能搜索导航网站，旨在帮助用户更高效地访问常用网站和管理书签，同时提供个性化的搜索体验。如果你厌倦了繁琐的网址输入和杂乱的书签管理，不妨来试试 Sun</summary>
      
    
    
    
    <category term="开源项目" scheme="https://www.eryang.top/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="SunNav" scheme="https://www.eryang.top/tags/SunNav/"/>
    
    <category term="导航网站，开源工具，TypeScript" scheme="https://www.eryang.top/tags/%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99%EF%BC%8C%E5%BC%80%E6%BA%90%E5%B7%A5%E5%85%B7%EF%BC%8CTypeScript/"/>
    
  </entry>
  
  <entry>
    <title>Git 进阶指南：从基础操作到团队协作最佳实践</title>
    <link href="https://www.eryang.top/2025/07/27/git%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://www.eryang.top/2025/07/27/git%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2025-07-27T11:16:05.000Z</published>
    <updated>2025-07-28T11:32:05.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-实用教程：从入门到熟练掌握版本控制"><a href="#Git-实用教程：从入门到熟练掌握版本控制" class="headerlink" title="Git 实用教程：从入门到熟练掌握版本控制"></a>Git 实用教程：从入门到熟练掌握版本控制</h1><p>Git 是目前最流行的分布式版本控制系统，被广泛用于软件开发、文档管理等场景。它能帮助你追踪文件的每一次修改，方便多人协作，还能在需要时轻松回滚到历史版本。本教程将从基础操作到进阶技巧，带你全面掌握 Git 的使用。</p><h2 id="一、Git-安装与初始化"><a href="#一、Git-安装与初始化" class="headerlink" title="一、Git 安装与初始化"></a>一、Git 安装与初始化</h2><h3 id="1-安装-Git"><a href="#1-安装-Git" class="headerlink" title="1. 安装 Git"></a>1. 安装 Git</h3><ul><li><strong>Windows</strong>：下载 <a href="https://git-scm.com/download/win">Git for Windows</a>，安装时保持默认选项即可（会自动配置环境变量，包含 Git Bash 终端）。</li><li><strong>macOS</strong>：通过 Homebrew 安装（<code>brew install git</code>），或直接下载 <a href="https://git-scm.com/download/mac">官方安装包</a>。</li><li><strong>Linux</strong>：使用包管理器安装（如 Ubuntu 用 <code>sudo apt install git</code>，CentOS 用 <code>sudo yum install git</code>）。</li></ul><p>安装完成后，打开终端输入 <code>git --version</code>，若显示版本号则表示安装成功。</p><h3 id="2-初始配置"><a href="#2-初始配置" class="headerlink" title="2. 初始配置"></a>2. 初始配置</h3><p>首次使用 Git 需配置用户名和邮箱（用于标识提交记录），终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;你的用户名&quot;</span>  <span class="hljs-comment"># 例如：git config --global user.name &quot;Alice&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;你的邮箱&quot;</span>   <span class="hljs-comment"># 例如：git config --global user.email &quot;alice@example.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li><code>--global</code> 表示全局配置，所有本地仓库都会使用该信息；若仅需配置当前仓库，去掉 <code>--global</code> 即可。</li><li>查看配置：<code>git config --list</code></li></ul><h3 id="3-创建-初始化仓库"><a href="#3-创建-初始化仓库" class="headerlink" title="3. 创建&#x2F;初始化仓库"></a>3. 创建&#x2F;初始化仓库</h3><p>仓库（Repository）是 Git 管理文件的目录，分为<strong>本地仓库</strong>和<strong>远程仓库</strong>（如 GitHub、Gitee 上的仓库）。</p><h4 id="方式-1：新建本地仓库"><a href="#方式-1：新建本地仓库" class="headerlink" title="方式 1：新建本地仓库"></a>方式 1：新建本地仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. 创建并进入项目文件夹</span><br><span class="hljs-built_in">mkdir</span> my-project<br><span class="hljs-built_in">cd</span> my-project<br><br><span class="hljs-comment"># 2. 初始化仓库（会生成隐藏的 .git 文件夹，存储版本信息）</span><br>git init<br></code></pre></td></tr></table></figure><h4 id="方式-2：克隆远程仓库"><a href="#方式-2：克隆远程仓库" class="headerlink" title="方式 2：克隆远程仓库"></a>方式 2：克隆远程仓库</h4><p>从远程仓库（如 GitHub）复制项目到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/用户名/仓库名.git  <span class="hljs-comment"># 替换为具体仓库地址</span><br></code></pre></td></tr></table></figure><h2 id="二、Git-核心操作：文件的增删改查"><a href="#二、Git-核心操作：文件的增删改查" class="headerlink" title="二、Git 核心操作：文件的增删改查"></a>二、Git 核心操作：文件的增删改查</h2><p>Git 工作流程分为 3 个区域：<strong>工作区</strong>（当前编辑的文件）、<strong>暂存区</strong>（临时存储待提交的修改）、<strong>本地仓库</strong>（正式保存的版本记录）。</p><h3 id="1-查看文件状态"><a href="#1-查看文件状态" class="headerlink" title="1. 查看文件状态"></a>1. 查看文件状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git status  <span class="hljs-comment"># 显示工作区和暂存区的文件状态</span><br></code></pre></td></tr></table></figure><ul><li>红色：文件在工作区被修改但未添加到暂存区；</li><li>绿色：文件已添加到暂存区，等待提交到本地仓库；</li><li>提示信息会显示下一步操作建议（如 <code>git add &lt;文件&gt;</code> 或 <code>git commit -m &quot;说明&quot;</code>）。</li></ul><h3 id="2-将文件添加到暂存区"><a href="#2-将文件添加到暂存区" class="headerlink" title="2. 将文件添加到暂存区"></a>2. 将文件添加到暂存区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加单个文件</span><br>git add 文件名  <span class="hljs-comment"># 例如：git add index.html</span><br><br><span class="hljs-comment"># 添加当前目录所有修改（常用）</span><br>git add .       <span class="hljs-comment"># 注意末尾的点，表示当前目录</span><br></code></pre></td></tr></table></figure><h3 id="3-将暂存区文件提交到本地仓库"><a href="#3-将暂存区文件提交到本地仓库" class="headerlink" title="3. 将暂存区文件提交到本地仓库"></a>3. 将暂存区文件提交到本地仓库</h3><p>提交时必须填写提交信息（描述本次修改内容，方便后续追溯）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -m <span class="hljs-string">&quot;这里填写提交说明&quot;</span>  <span class="hljs-comment"># 例如：git commit -m &quot;修复登录按钮样式错误&quot;</span><br></code></pre></td></tr></table></figure><p>若提交后发现信息写错，可修改最后一次提交信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit --amend -m <span class="hljs-string">&quot;新的提交说明&quot;</span><br></code></pre></td></tr></table></figure><h3 id="4-查看提交历史"><a href="#4-查看提交历史" class="headerlink" title="4. 查看提交历史"></a>4. 查看提交历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span>  <span class="hljs-comment"># 显示详细提交记录（作者、时间、提交说明、哈希值）</span><br>git <span class="hljs-built_in">log</span> --oneline  <span class="hljs-comment"># 简洁显示（只显示哈希值前7位和提交说明）</span><br></code></pre></td></tr></table></figure><h3 id="5-撤销修改"><a href="#5-撤销修改" class="headerlink" title="5. 撤销修改"></a>5. 撤销修改</h3><h4 id="情况-1：文件在工作区被修改，未添加到暂存区（想恢复到上次提交的状态）"><a href="#情况-1：文件在工作区被修改，未添加到暂存区（想恢复到上次提交的状态）" class="headerlink" title="情况 1：文件在工作区被修改，未添加到暂存区（想恢复到上次提交的状态）"></a>情况 1：文件在工作区被修改，未添加到暂存区（想恢复到上次提交的状态）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout -- 文件名  <span class="hljs-comment"># 例如：git checkout -- style.css</span><br></code></pre></td></tr></table></figure><h4 id="情况-2：文件已添加到暂存区，想撤回到工作区"><a href="#情况-2：文件已添加到暂存区，想撤回到工作区" class="headerlink" title="情况 2：文件已添加到暂存区，想撤回到工作区"></a>情况 2：文件已添加到暂存区，想撤回到工作区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reset HEAD 文件名  <span class="hljs-comment"># 例如：git reset HEAD style.css</span><br></code></pre></td></tr></table></figure><h4 id="情况-3：已提交到本地仓库，想回滚到历史版本"><a href="#情况-3：已提交到本地仓库，想回滚到历史版本" class="headerlink" title="情况 3：已提交到本地仓库，想回滚到历史版本"></a>情况 3：已提交到本地仓库，想回滚到历史版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. 先查看历史版本的哈希值（前7位即可）</span><br>git <span class="hljs-built_in">log</span> --oneline<br><br><span class="hljs-comment"># 2. 回滚到指定版本（注意：该操作会覆盖工作区和暂存区，谨慎使用）</span><br>git reset --hard 哈希值  <span class="hljs-comment"># 例如：git reset --hard a1b2c3d</span><br></code></pre></td></tr></table></figure><h3 id="6-删除文件"><a href="#6-删除文件" class="headerlink" title="6. 删除文件"></a>6. 删除文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. 删除工作区文件，并将删除操作添加到暂存区</span><br>git <span class="hljs-built_in">rm</span> 文件名  <span class="hljs-comment"># 例如：git rm old.txt</span><br><br><span class="hljs-comment"># 2. 提交删除操作到本地仓库</span><br>git commit -m <span class="hljs-string">&quot;删除无用文件 old.txt&quot;</span><br></code></pre></td></tr></table></figure><h2 id="三、远程仓库操作：同步代码"><a href="#三、远程仓库操作：同步代码" class="headerlink" title="三、远程仓库操作：同步代码"></a>三、远程仓库操作：同步代码</h2><p>远程仓库（如 GitHub、Gitee）是多人协作的核心，需掌握推送（本地 → 远程）和拉取（远程 → 本地）操作。</p><h3 id="1-关联远程仓库"><a href="#1-关联远程仓库" class="headerlink" title="1. 关联远程仓库"></a>1. 关联远程仓库</h3><p>若本地仓库是 <code>git init</code> 创建的，需手动关联远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add origin 远程仓库地址  <span class="hljs-comment"># 例如：git remote add origin https://github.com/xxx/xxx.git</span><br></code></pre></td></tr></table></figure><ul><li><code>origin</code> 是远程仓库的默认别名，可自定义（但建议保持默认，方便记忆）。</li></ul><p>查看已关联的远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote -v  <span class="hljs-comment"># 显示远程仓库的 fetch（拉取）和 push（推送）地址</span><br></code></pre></td></tr></table></figure><h3 id="2-推送本地仓库到远程仓库"><a href="#2-推送本地仓库到远程仓库" class="headerlink" title="2. 推送本地仓库到远程仓库"></a>2. 推送本地仓库到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 首次推送时，需指定本地分支与远程分支关联（通常主分支为 main 或 master）</span><br>git push -u origin 分支名  <span class="hljs-comment"># 例如：git push -u origin main</span><br><br><span class="hljs-comment"># 后续推送（已关联分支）</span><br>git push<br></code></pre></td></tr></table></figure><h3 id="3-拉取远程仓库的更新"><a href="#3-拉取远程仓库的更新" class="headerlink" title="3. 拉取远程仓库的更新"></a>3. 拉取远程仓库的更新</h3><p>当远程仓库有新修改（如他人提交），需拉取到本地同步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull origin 分支名  <span class="hljs-comment"># 例如：git pull origin main</span><br></code></pre></td></tr></table></figure><ul><li>若本地有未提交的修改，拉取可能冲突，建议先提交本地修改再拉取。</li></ul><h2 id="四、分支操作：多人协作的核心"><a href="#四、分支操作：多人协作的核心" class="headerlink" title="四、分支操作：多人协作的核心"></a>四、分支操作：多人协作的核心</h2><p>分支是 Git 最强大的功能之一，可理解为“平行宇宙”——你可以在分支上独立开发（如新增功能、修复 bug），完成后再合并到主分支，不影响主分支的稳定性。</p><h3 id="1-查看分支"><a href="#1-查看分支" class="headerlink" title="1. 查看分支"></a>1. 查看分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch  <span class="hljs-comment"># 显示本地所有分支，当前分支前有 * 标记</span><br>git branch -r  <span class="hljs-comment"># 显示远程分支</span><br>git branch -a  <span class="hljs-comment"># 显示本地和远程所有分支</span><br></code></pre></td></tr></table></figure><h3 id="2-创建与切换分支"><a href="#2-创建与切换分支" class="headerlink" title="2. 创建与切换分支"></a>2. 创建与切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建分支</span><br>git branch 分支名  <span class="hljs-comment"># 例如：git branch feature-login</span><br><br><span class="hljs-comment"># 切换到指定分支</span><br>git checkout 分支名  <span class="hljs-comment"># 例如：git checkout feature-login</span><br><br><span class="hljs-comment"># 简化：创建并切换到新分支（常用）</span><br>git checkout -b 分支名  <span class="hljs-comment"># 例如：git checkout -b bugfix-123</span><br></code></pre></td></tr></table></figure><h3 id="3-合并分支"><a href="#3-合并分支" class="headerlink" title="3. 合并分支"></a>3. 合并分支</h3><p>将 A 分支的修改合并到当前分支（例如：将功能分支合并到主分支 main）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. 先切换到目标分支（如 main）</span><br>git checkout main<br><br><span class="hljs-comment"># 2. 合并来源分支（如 feature-login）</span><br>git merge feature-login<br></code></pre></td></tr></table></figure><h4 id="解决合并冲突"><a href="#解决合并冲突" class="headerlink" title="解决合并冲突"></a>解决合并冲突</h4><p>若合并时出现 <strong>“Automatic merge failed”</strong>，表示文件冲突（同一位置被不同分支修改），需手动解决：</p><ol><li>打开冲突文件，搜索 <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code>（当前分支内容）和 <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 分支名</code>（来源分支内容）；</li><li>保留需要的内容，删除冲突标记（<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>、<code>=======</code>、<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>）；</li><li>解决后提交：<code>git add .</code> → <code>git commit -m &quot;解决合并冲突&quot;</code>。</li></ol><h3 id="4-删除分支"><a href="#4-删除分支" class="headerlink" title="4. 删除分支"></a>4. 删除分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 删除本地分支（需先切换到其他分支）</span><br>git branch -d 分支名  <span class="hljs-comment"># 例如：git branch -d feature-login</span><br><br><span class="hljs-comment"># 强制删除未合并的分支（谨慎使用）</span><br>git branch -D 分支名<br><br><span class="hljs-comment"># 删除远程分支</span><br>git push origin --delete 分支名  <span class="hljs-comment"># 例如：git push origin --delete feature-login</span><br></code></pre></td></tr></table></figure><h2 id="五、实用技巧与场景"><a href="#五、实用技巧与场景" class="headerlink" title="五、实用技巧与场景"></a>五、实用技巧与场景</h2><h3 id="1-忽略不需要版本控制的文件"><a href="#1-忽略不需要版本控制的文件" class="headerlink" title="1. 忽略不需要版本控制的文件"></a>1. 忽略不需要版本控制的文件</h3><p>创建 <code>.gitignore</code> 文件（放在仓库根目录），列出无需跟踪的文件&#x2F;目录（如日志、缓存、依赖包）：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs txt"># 忽略所有 .log 文件<br>*.log<br><br># 忽略 node_modules 目录<br>node_modules/<br><br># 忽略特定文件<br>.DS_Store  # macOS 系统文件<br>.env       # 环境变量文件（含敏感信息）<br></code></pre></td></tr></table></figure><h3 id="2-暂存工作区修改（stash）"><a href="#2-暂存工作区修改（stash）" class="headerlink" title="2. 暂存工作区修改（stash）"></a>2. 暂存工作区修改（stash）</h3><p>当需要切换分支，但本地修改未完成不想提交时，可暂存修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 暂存当前工作区的所有修改</span><br>git stash<br><br><span class="hljs-comment"># 查看暂存列表</span><br>git stash list<br><br><span class="hljs-comment"># 恢复最近一次暂存的修改（并删除暂存记录）</span><br>git stash pop<br><br><span class="hljs-comment"># 恢复指定暂存（通过 stash@&#123;&#125; 后的数字，如 0 表示第一条）</span><br>git stash apply stash@&#123;0&#125;<br></code></pre></td></tr></table></figure><h3 id="3-查看两次提交的差异"><a href="#3-查看两次提交的差异" class="headerlink" title="3. 查看两次提交的差异"></a>3. 查看两次提交的差异</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git diff 哈希值1 哈希值2  <span class="hljs-comment"># 比较两个版本的差异</span><br>git diff 分支1 分支2      <span class="hljs-comment"># 比较两个分支的差异</span><br></code></pre></td></tr></table></figure><h2 id="六、常见问题与解决"><a href="#六、常见问题与解决" class="headerlink" title="六、常见问题与解决"></a>六、常见问题与解决</h2><ol><li><p><strong>推送失败提示“permission denied”</strong>：远程仓库权限不足，需检查是否已登录正确账号（GitHub 可通过 Personal Access Token 或 SSH 密钥授权）。</p></li><li><p><strong>拉取时冲突无法解决</strong>：若冲突复杂，可放弃本地修改，强制拉取远程最新版本（谨慎使用，会覆盖本地未提交的修改）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git fetch --all<br>git reset --hard origin/分支名  <span class="hljs-comment"># 例如：git reset --hard origin/main</span><br></code></pre></td></tr></table></figure></li><li><p><strong>忘记提交某些文件</strong>：无需重新创建分支，直接提交新修改并推送即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add 遗漏的文件<br>git commit -m <span class="hljs-string">&quot;补充提交：添加xxx文件&quot;</span><br>git push<br></code></pre></td></tr></table></figure></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Git 的核心逻辑是“追踪修改、多版本管理、协作同步”，掌握 <code>add</code>、<code>commit</code>、<code>push</code>、<code>pull</code>、<code>branch</code> 等基础命令后，即可应对日常开发需求。熟练后可探索更多高级功能（如 cherry-pick 挑选提交、rebase 变基等），进一步提升效率。</p><p>记住：<strong>频繁提交、写清晰的提交说明、及时同步远程仓库</strong>，是使用 Git 的好习惯！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Git-实用教程：从入门到熟练掌握版本控制&quot;&gt;&lt;a href=&quot;#Git-实用教程：从入门到熟练掌握版本控制&quot; class=&quot;headerlink&quot; title=&quot;Git 实用教程：从入门到熟练掌握版本控制&quot;&gt;&lt;/a&gt;Git 实用教程：从入门到熟练掌握版本控制&lt;/</summary>
      
    
    
    
    <category term="开发工具" scheme="https://www.eryang.top/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Git" scheme="https://www.eryang.top/tags/Git/"/>
    
    <category term="版本控制" scheme="https://www.eryang.top/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    <category term="团队协作" scheme="https://www.eryang.top/tags/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/"/>
    
    <category term="程序员技能" scheme="https://www.eryang.top/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>macOS无法打开未验证安装包的解决方案：无法打开‘XXX.pkg’，因为无法验证其是否包含可能危害Mac安全或泄漏隐私的恶意软件</title>
    <link href="https://www.eryang.top/2025/07/23/Mac%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81/"/>
    <id>https://www.eryang.top/2025/07/23/Mac%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81/</id>
    <published>2025-07-23T13:16:16.000Z</published>
    <updated>2025-07-27T11:12:34.099Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upyun.eryang.top/img/macOS%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E6%95%99%E7%A8%8B1.jpg" alt="第一步操作界面"></p><p>在 macOS Ventura 及以上版本，系统安全性进一步提升，默认不允许运行未验证或未签名的应用程序。当尝试安装这类安装包（如“XXX.pkg”）时，会出现“无法打开‘XXX.pkg’，因为无法验证其是否包含可能危害 Mac 安全或泄漏隐私的恶意软件”的提示。下面为你介绍基于新版 macOS 15 设置界面的三步解决方案。</p><h4 id="三步解决方案"><a href="#三步解决方案" class="headerlink" title="三步解决方案"></a>三步解决方案</h4><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px; width:100%;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"autoplay":true,"theme":"#FADFA3","video":{"url":"https://upyun.eryang.top/video/mac%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81.mp4","pic":"https://upyun.eryang.top/img/macOS解决无法验证安装包的教程1.jpg"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p><strong>第一步：打开“系统设置”中的隐私与安全</strong><br>点击屏幕左上角的苹果菜单，在弹出的下拉菜单中选择“系统设置”。进入系统设置后，在左侧的菜单列表里找到“隐私与安全”并点击进入。</p><p><img src="https://upyun.eryang.top/img/macOS%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E6%95%99%E7%A8%8B2.png" alt="第二步提示位置"></p><p><strong>第二步：找到拦截的安装包提示</strong><br>在“隐私与安全”页面的“安全性”部分，会看到类似“已阻止‘XXX.pkg’以保护 Mac”的提示，这表明 macOS 因该程序无法通过验证而阻止了其运行。</p><p><strong>第三步：点击“仍要打开”</strong><br>在拦截提示的右侧，点击“仍要打开”。系统会再次弹出确认窗口，提示存在风险，此时选择“打开”，安装程序就能正常启动，可继续完成安装。</p><p><img src="https://upyun.eryang.top/img/macOS%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E6%95%99%E7%A8%8B3.jpg" alt="第三步确认窗口"></p><h4 id="解决方案背后的注意事项"><a href="#解决方案背后的注意事项" class="headerlink" title="解决方案背后的注意事项"></a>解决方案背后的注意事项</h4><p><strong>为什么 macOS 会拦截未验证软件？</strong><br> 未验证的软件可能来自未知来源，存在包含恶意代码的潜在风险。macOS 通过 Gatekeeper 功能来保护系统，阻止未签名的软件运行，以此保障用户的 Mac 安全和隐私。</p>]]></content>
    
    
    <summary type="html">本文详细介绍在macOS Ventura及以上版本中，解决“无法验证安装包是否包含恶意软件”问题的三步法，帮助用户顺利安装未验证的.pkg文件。</summary>
    
    
    
    <category term="技术指南" scheme="https://www.eryang.top/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/"/>
    
    
    <category term="Mac 软件错误" scheme="https://www.eryang.top/tags/Mac-%E8%BD%AF%E4%BB%B6%E9%94%99%E8%AF%AF/"/>
    
    <category term="无法验证" scheme="https://www.eryang.top/tags/%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>W11ClassicMenu：一键恢复Win11经典右键菜单</title>
    <link href="https://www.eryang.top/2025/07/22/W11ClassicMenu/"/>
    <id>https://www.eryang.top/2025/07/22/W11ClassicMenu/</id>
    <published>2025-07-22T11:53:19.000Z</published>
    <updated>2025-07-22T17:20:11.296Z</updated>
    
    <content type="html"><![CDATA[<p>Windows 11 的新右键菜单设计虽然简洁，但对许多习惯了旧版 Windows（如 Win10、Win7）的用户来说并不友好。许多常用功能被隐藏在 “显示更多选项” 中，增加了操作步骤，降低了效率。为了解决这一问题，W11ClassicMenu 应运而生。这是一款小巧、免费且便携的工具，能够一键将 Win11 的右键菜单恢复为经典的 Windows 10 样式，让用户重新找回熟悉的操作体验。</p><p><img src="https://upyun.eryang.top/img/W11ClassicMenu%E5%B7%A5%E5%85%B7%E5%9B%BE%E6%A0%87%E6%88%96%E4%B8%BB%E7%95%8C%E9%9D%A2%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="W11ClassicMenu工具图标或主界面示意图"></p><h3 id="工具特点-xA"><a href="#工具特点-xA" class="headerlink" title="工具特点&#xA;"></a>工具特点&#xA;</h3><ul><li><p><strong>小巧免费</strong>：文件大小不足 1MB，完全免费使用，无需担心付费问题。</p></li><li><p><strong>便携实用</strong>：无需安装，解压后即可直接运行，不占用系统额外空间，用完可随时删除，不会留下冗余文件。</p></li></ul><h3 id="核心功能-xA"><a href="#核心功能-xA" class="headerlink" title="核心功能&#xA;"></a>核心功能&#xA;</h3><ul><li><strong>一键启用经典菜单</strong>：打开工具后，点击 “启用 Windows 11 经典上下文菜单样式”，稍等片刻，即可将右键菜单恢复为经典的 Windows 10 样式，常用功能直接显示，无需再点击 “显示更多选项”。</li></ul><p><img src="https://upyun.eryang.top/img/%E4%B8%80%E9%94%AE%E5%90%AF%E7%94%A8%E7%BB%8F%E5%85%B8%E8%8F%9C%E5%8D%95%E6%93%8D%E4%BD%9C%E7%95%8C%E9%9D%A2.png" alt="一键启用经典菜单操作界面"></p><p><img src="https://upyun.eryang.top/img/%E4%B8%80%E9%94%AE%E5%90%AF%E7%94%A8%E7%BB%8F%E5%85%B8%E8%8F%9C%E5%8D%95%E6%93%8D%E4%BD%9C%E7%95%8C%E9%9D%A22.png" alt="一键启用经典菜单操作界面"></p><ul><li><p><strong>一键恢复默认菜单</strong>：如果后续想切换回 Win11 的默认菜单，只需点击 “启用 Windows 11 默认上下文菜单样式”，操作简单快捷，轻松在两种样式间切换。</p></li><li><p><strong>支持中文界面</strong>：软件内置中文语言选项，进入设置后可轻松切换为简体中文，国内用户使用无语言障碍。</p></li><li><p><strong>安全可靠</strong>：无需手动修改注册表，通过安全方式对系统文件进行调整，降低操作风险，保障系统稳定。</p></li></ul><h3 id="系统兼容性-xA"><a href="#系统兼容性-xA" class="headerlink" title="系统兼容性&#xA;"></a>系统兼容性&#xA;</h3><p>广泛兼容 Windows 11 的多个版本，包括 22000.160、22458.1000、22463.1000 等，安装了这些版本系统的用户均可放心使用。</p><h3 id="使用建议-xA"><a href="#使用建议-xA" class="headerlink" title="使用建议&#xA;"></a>使用建议&#xA;</h3><p>在使用工具修改右键菜单样式前，建议备份系统重要文件，虽然工具安全性较高，但做好备份能进一步保障系统安全。</p><h3 id="🔽-软件下载区"><a href="#🔽-软件下载区" class="headerlink" title="🔽 软件下载区"></a>🔽 软件下载区</h3><blockquote><p><strong><a href="https://wwqa.lanzouq.com/iTXvO31jxnwh">蓝奏云下载</a></strong></p></blockquote>]]></content>
    
    
    <summary type="html">分享一款轻量工具W11ClassicMenu，可一键将Win11右键菜单切换为Win10经典样式，无需修改注册表，安全便捷，附详细使用教程与下载链接。</summary>
    
    
    
    <category term="软件工具" scheme="https://www.eryang.top/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    <category term="系统优化" scheme="https://www.eryang.top/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
    
    <category term="Windows 11" scheme="https://www.eryang.top/tags/Windows-11/"/>
    
    <category term="右键菜单" scheme="https://www.eryang.top/tags/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/"/>
    
    <category term="系统工具" scheme="https://www.eryang.top/tags/%E7%B3%BB%E7%BB%9F%E5%B7%A5%E5%85%B7/"/>
    
    <category term="W11ClassicMenu" scheme="https://www.eryang.top/tags/W11ClassicMenu/"/>
    
  </entry>
  
  <entry>
    <title>网线接法详解：从入门到精通的图文指南</title>
    <link href="https://www.eryang.top/2025/07/19/network-cable-wiring-guide/"/>
    <id>https://www.eryang.top/2025/07/19/network-cable-wiring-guide/</id>
    <published>2025-07-19T07:30:00.000Z</published>
    <updated>2025-07-22T17:39:49.169Z</updated>
    
    <content type="html"><![CDATA[<p>在网络布线中，正确的网线接法是保证网络稳定运行的基础。无论是家庭组网、办公室布线还是监控安装，掌握网线的接线方法都非常实用。本文将详细介绍网线的两种常见接法（T568A 和 T568B），以及完整的接线步骤，新手也能轻松上手。</p><h2 id="一、基础知识：认识网线与水晶头"><a href="#一、基础知识：认识网线与水晶头" class="headerlink" title="一、基础知识：认识网线与水晶头"></a>一、基础知识：认识网线与水晶头</h2><p>在开始接线前，我们需要先了解核心组件：</p><h3 id="1-网线类型"><a href="#1-网线类型" class="headerlink" title="1. 网线类型"></a>1. 网线类型</h3><ul><li><strong>超五类网线（Cat5e）</strong>：支持 1000Mbps 速率，适合家庭和小型办公场景</li><li><strong>六类网线（Cat6）</strong>：支持 10Gbps 速率，内部有十字骨架，抗干扰能力更强</li><li><strong>超六类&#x2F;七类网线</strong>：更高性能，适合专业级布线，价格也更高</li></ul><p>日常家用或普通办公，超五类和六类网线已足够使用。</p><h3 id="2-水晶头"><a href="#2-水晶头" class="headerlink" title="2. 水晶头"></a>2. 水晶头</h3><p>网线水晶头分为<strong>RJ45 水晶头</strong>（8 针，用于网线）和 RJ11（4 针，用于电话线），本文仅讨论 RJ45 水晶头。注意：六类网线需搭配<strong>六类水晶头</strong>（孔位更大，带金属屏蔽片）。</p><h3 id="3-线序标准"><a href="#3-线序标准" class="headerlink" title="3. 线序标准"></a>3. 线序标准</h3><p>国际通用两种线序标准，<strong>T568B</strong>是目前最常用的（推荐优先使用）：</p><ul><li><strong>T568B 线序</strong>：橙白 → 橙 → 绿白 → 蓝 → 蓝白 → 绿 → 棕白 → 棕</li><li><strong>T568A 线序</strong>：绿白 → 绿 → 橙白 → 蓝 → 蓝白 → 橙 → 棕白 → 棕</li></ul><p><img src="https://upyun.eryang.top/img/%E7%BA%BF%E5%BA%8F%E6%A0%87%E5%87%86.jpeg" alt="线序标准"></p><p>两种标准的区别仅在于橙、绿线对的位置互换，功能完全一致。</p><h2 id="二、必备工具"><a href="#二、必备工具" class="headerlink" title="二、必备工具"></a>二、必备工具</h2><p>接线前请准备以下工具：</p><ul><li>网线（根据需求长度裁剪）</li><li>RJ45 水晶头（数量比实际需求多备 2-3 个，新手易接错）</li><li>网线钳（带剥线、剪线、压接功能，建议选带棘轮的款式，省力且压接牢固）</li><li>网线测试仪（可选，用于检测接线是否通畅）</li></ul><h2 id="三、实战操作：T568B-接法（图文步骤）"><a href="#三、实战操作：T568B-接法（图文步骤）" class="headerlink" title="三、实战操作：T568B 接法（图文步骤）"></a>三、实战操作：T568B 接法（图文步骤）</h2><h3 id="步骤-1：剥线"><a href="#步骤-1：剥线" class="headerlink" title="步骤 1：剥线"></a>步骤 1：剥线</h3><p>用网线钳的<strong>剥线刀口</strong>（通常标有“剥线”或带有锯齿图标），在网线一端约 1.5cm 处轻轻旋转一圈，剥去外层绝缘皮。</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.alicdn.com%2Fimgextra%2Fi3%2F2214300139776%2FO1CN01p9lEcd2M5SqaGOnJm_%21%212214300139776.jpg&refer=http%3A%2F%2Fimg.alicdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1755428090&t=68517f249f2415ae06d05b2697b0a2ff" alt="剥线示意图"></p><p>（示意图：左手捏紧网线，右手用网线钳剥线，注意不要剪到内部的 8 根细线）</p><h3 id="步骤-2：理线"><a href="#步骤-2：理线" class="headerlink" title="步骤 2：理线"></a>步骤 2：理线</h3><p>剥开后可见 4 对双绞线（橙白-橙、绿白-绿、蓝白-蓝、棕白-棕），按以下步骤整理：</p><ol><li>拆开双绞线，将 8 根线拉直</li><li>按<strong>T568B 线序</strong>排列：橙白 → 橙 → 绿白 → 蓝 → 蓝白 → 绿 → 棕白 → 棕</li><li>用手指将线捏紧，确保顺序无误且排列整齐</li></ol><p><img src="https://gss0.baidu.com/9fo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/9e3df8dcd100baa1b7e230684f10b912c9fc2e12.jpg" alt="理线示意图"></p><p>（示意图：8 根线按 T568B 顺序排列，线身保持平直无交叉）</p><h3 id="步骤-3：剪齐线头"><a href="#步骤-3：剪齐线头" class="headerlink" title="步骤 3：剪齐线头"></a>步骤 3：剪齐线头</h3><p>用网线钳的<strong>剪线刀口</strong>，将排列好的线头垂直剪齐，长度约 1cm（太长会导致水晶头内针脚接触不良，太短则可能压不到线）。</p><p><img src="https://upyun.eryang.top/img/%E5%89%AA%E7%BA%BF%E7%A4%BA%E6%84%8F%E5%9B%BE.jpeg" alt="剪线示意图"></p><h3 id="步骤-4：插入水晶头"><a href="#步骤-4：插入水晶头" class="headerlink" title="步骤 4：插入水晶头"></a>步骤 4：插入水晶头</h3><ul><li>水晶头<strong>铜片朝上</strong>（对着自己），将整理好的网线插入水晶头底部，确保每根线都顶到水晶头顶端（可从水晶头侧面观察是否到位）</li><li>检查线序是否在插入过程中混乱，若有偏差需重新整理</li></ul><p><img src="https://upyun.eryang.top/img/%E6%8F%92%E6%B0%B4%E6%99%B6%E5%A4%B4%E7%A4%BA%E6%84%8F%E5%9B%BE.jpeg" alt="插水晶头示意图"></p><h3 id="步骤-5：压接水晶头"><a href="#步骤-5：压接水晶头" class="headerlink" title="步骤 5：压接水晶头"></a>步骤 5：压接水晶头</h3><p>将水晶头放入网线钳的<strong>压接刀口</strong>（对应 RJ45 的位置），用力按压网线钳手柄，听到“咔哒”声后松开，确保 8 个铜片都牢牢压入线芯。</p><p><img src="https://upyun.eryang.top/img/%E5%8E%8B%E6%8E%A5%E7%A4%BA%E6%84%8F%E5%9B%BE.jpeg" alt="压接示意图"><br>（示意图：双手紧握网线钳，垂直用力压接，避免歪斜）</p><h3 id="步骤-6：制作另一端"><a href="#步骤-6：制作另一端" class="headerlink" title="步骤 6：制作另一端"></a>步骤 6：制作另一端</h3><p>重复步骤 1-5 制作网线另一端。根据需求选择：</p><ul><li><strong>直通线</strong>：两端均为 T568B（最常用，用于路由器到电脑、交换机到设备等）</li><li><strong>交叉线</strong>：一端 T568A，一端 T568B（用于电脑直接连电脑，现在设备多支持自动翻转，交叉线已很少用）</li></ul><h2 id="四、检测：确认接线是否成功"><a href="#四、检测：确认接线是否成功" class="headerlink" title="四、检测：确认接线是否成功"></a>四、检测：确认接线是否成功</h2><p>用<strong>网线测试仪</strong>检测：</p><ol><li>将网线两端分别插入测试仪的“主测端”和“远程端”</li><li>打开测试仪电源，观察指示灯</li><li>若 8 个指示灯按 1-8 顺序依次亮起，说明接线正确；若某灯不亮或顺序错乱，需重新制作</li></ol><p><img src="https://pic4.zhimg.com/v2-d6c7f2a842e60d5febe309955f2bfe0d_r.jpg" alt="网线测试仪示意图"></p><h2 id="五、常见问题与注意事项"><a href="#五、常见问题与注意事项" class="headerlink" title="五、常见问题与注意事项"></a>五、常见问题与注意事项</h2><ol><li><strong>接触不良</strong>：多因线头未顶到水晶头顶端，或压接不牢固，需重新剪线并确保线芯到位</li><li><strong>线序错误</strong>：新手易混淆“绿白”和“绿”、“橙白”和“橙”，建议理线时逐对拆开</li><li><strong>剥线过深</strong>：剥线时若剪到内部细线，会导致网络中断，剥线时力度要轻</li><li><strong>水晶头选错</strong>：六类网线用五类水晶头会因孔位太小导致线芯变形，影响性能</li></ol><h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>掌握网线接法并不难，关键在于<strong>理线整齐</strong>和<strong>压接牢固</strong>。新手建议多练习 2-3 次，熟悉后 3 分钟就能接好一根网线。无论是家庭网络升级还是线路维修，自己动手接线不仅能节省成本，还能避免被劣质成品线坑骗，赶紧试试吧！</p><p>如果觉得本文有用，欢迎分享给需要的朋友~</p>]]></content>
    
    
    <summary type="html">本文详细介绍了网线的两种主流接法（T568A和T568B），通过图文结合的方式讲解从剥线、理线到压接水晶头的完整步骤，还包含工具选择、检测方法及常见问题解决，助你轻松掌握网线制作技巧。</summary>
    
    
    
    <category term="网络技术" scheme="https://www.eryang.top/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
    <category term="布线指南" scheme="https://www.eryang.top/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/%E5%B8%83%E7%BA%BF%E6%8C%87%E5%8D%97/"/>
    
    
    <category term="网线接法" scheme="https://www.eryang.top/tags/%E7%BD%91%E7%BA%BF%E6%8E%A5%E6%B3%95/"/>
    
    <category term="T568A" scheme="https://www.eryang.top/tags/T568A/"/>
    
    <category term="T568B" scheme="https://www.eryang.top/tags/T568B/"/>
    
    <category term="网络布线" scheme="https://www.eryang.top/tags/%E7%BD%91%E7%BB%9C%E5%B8%83%E7%BA%BF/"/>
    
    <category term="水晶头压接" scheme="https://www.eryang.top/tags/%E6%B0%B4%E6%99%B6%E5%A4%B4%E5%8E%8B%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>Windows 11 优化设置指南：让电脑焕新如丝滑</title>
    <link href="https://www.eryang.top/2025/07/16/win11%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/"/>
    <id>https://www.eryang.top/2025/07/16/win11%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/</id>
    <published>2025-07-16T12:25:00.000Z</published>
    <updated>2025-07-22T17:27:04.612Z</updated>
    
    <content type="html"><![CDATA[<p>在使用 Windows 11 的过程中，你是否遇到过系统广告过多、自动更新频繁打扰、操作不够流畅等问题？别担心，这篇文章就来手把手教你优化 Windows 11，让你的电脑既清爽又流畅~</p><h2 id="一、关闭系统广告，还界面清净"><a href="#一、关闭系统广告，还界面清净" class="headerlink" title="一、关闭系统广告，还界面清净"></a>一、关闭系统广告，还界面清净</h2><p>Windows 11 里的系统广告总是“无孔不入”——搜索菜单、小组件、锁屏界面，甚至 Edge 浏览器都有不少推广内容。这些广告不仅影响视觉体验，还会占用系统资源。</p><h3 id="1-搜索菜单广告关闭"><a href="#1-搜索菜单广告关闭" class="headerlink" title="1. 搜索菜单广告关闭"></a>1. 搜索菜单广告关闭</h3><ul><li>打开<strong>搜索菜单</strong>，点击右上角“三个点”，进入「搜索设置」。</li><li>在设置页面下拉，找到「显示搜索要点」，将其关闭；顺手也把“历史记录”等冗余选项关闭，搜索菜单瞬间清爽。</li></ul><h3 id="2-小组件广告管理"><a href="#2-小组件广告管理" class="headerlink" title="2. 小组件广告管理"></a>2. 小组件广告管理</h3><ul><li>任务栏右键打开「任务栏设置」，找到「小组件」选项，可直接关闭小组件面板；若想保留小组件但清理广告，打开小组件后点击右上角“设置”，关闭「显示或隐藏信息提要」，减少信息推送。</li></ul><p><img src="https://ipak.ipason.com/images/ce6fb6cb-b2a2-45db-ac90-b5b0ab28d796.png" alt="小组件"></p><h3 id="3-锁屏界面去广告"><a href="#3-锁屏界面去广告" class="headerlink" title="3. 锁屏界面去广告"></a>3. 锁屏界面去广告</h3><ul><li>按 <code>Win + I</code> 打开系统设置，进入「个性化」-「锁屏界面」。</li><li>选择“图片”作为锁屏背景，去掉“获取花絮、提示”等选项，并将「锁屏界面状态」设为“无”，锁屏不再弹出推广。</li></ul><h3 id="4-Edge-浏览器广告过滤"><a href="#4-Edge-浏览器广告过滤" class="headerlink" title="4. Edge 浏览器广告过滤"></a>4. Edge 浏览器广告过滤</h3><ul><li>打开 Edge 浏览器，点击右上角“设置”，找到「页面设置」。</li><li>在“网站导航”中选择关闭信息流，再关闭“显示内容”等选项，浏览器首页告别杂乱广告。</li></ul><h2 id="二、暂停自动更新，掌控更新节奏"><a href="#二、暂停自动更新，掌控更新节奏" class="headerlink" title="二、暂停自动更新，掌控更新节奏"></a>二、暂停自动更新，掌控更新节奏</h2><p>Windows 11 的自动更新有时过于频繁，还可能带来 Bug 或游戏负优化。我们可以通过以下步骤暂停更新：</p><h3 id="1-注册表调整（简单有效）"><a href="#1-注册表调整（简单有效）" class="headerlink" title="1. 注册表调整（简单有效）"></a>1. 注册表调整（简单有效）</h3><ul><li>按 <code>Win + R</code> 打开“运行”，输入 <code>regedit</code> 进入注册表编辑器。</li><li>导航到路径：<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings</code>。</li><li>在空白处右键新建 <code>DWORD（32 位）值</code>，命名为 <code>FlightSettingsMaxPauseDays</code>，将数值数据改为十进制（比如填 20000 表示暂停很久），保存后重启电脑。</li></ul><h3 id="2-系统设置内调整"><a href="#2-系统设置内调整" class="headerlink" title="2. 系统设置内调整"></a>2. 系统设置内调整</h3><ul><li>打开「设置」-「Windows 更新」，在“暂停更新”选项中选择最长暂停时长，进一步灵活控制更新时间。</li></ul><h2 id="三、自动清理系统垃圾，释放存储空间"><a href="#三、自动清理系统垃圾，释放存储空间" class="headerlink" title="三、自动清理系统垃圾，释放存储空间"></a>三、自动清理系统垃圾，释放存储空间</h2><p>系统用久了，缓存、临时文件会占用大量空间。开启自动清理，让系统定期“减负”：</p><ul><li>打开「设置」-「系统」-「存储」，开启「存储感知」。</li><li>进入「存储感知」详细设置，按需选择自动清理的频率（如每天、每周、每月），以及清理的文件类型（临时文件、回收站文件等）。</li></ul><h2 id="四、关闭不必要开机启动项，提速开机"><a href="#四、关闭不必要开机启动项，提速开机" class="headerlink" title="四、关闭不必要开机启动项，提速开机"></a>四、关闭不必要开机启动项，提速开机</h2><p>开机越来越慢？很可能是开机启动项太多在拖后腿：</p><ul><li>按 <code>Win + I</code> 打开设置，进入「应用」-「启动」。</li><li>在这里能看到所有开机启动的程序及其对开机速度的影响，把不需要随系统启动的软件开关关闭即可。</li></ul><h2 id="五、减少动效，提升操作流畅度"><a href="#五、减少动效，提升操作流畅度" class="headerlink" title="五、减少动效，提升操作流畅度"></a>五、减少动效，提升操作流畅度</h2><p>Windows 11 新增了不少动效和显示效果，虽然美观但会增加系统负载。配置较老的电脑可以关闭部分动效：</p><ul><li>打开「设置」-「辅助功能」-「视觉效果」，关闭「透明效果」和「动画效果」。</li><li>搜索打开「高级系统设置」，在“性能”选项卡中选择「调整为最佳性能」，也可手动勾选保留必要的视觉效果（如“平滑滚动”“显示图标”等）。</li></ul><h2 id="六、显示图标与隐藏文件管理"><a href="#六、显示图标与隐藏文件管理" class="headerlink" title="六、显示图标与隐藏文件管理"></a>六、显示图标与隐藏文件管理</h2><p>刚买的电脑桌面只有回收站？想查看文件后缀和隐藏文件？这些设置帮你搞定：</p><h3 id="1-显示桌面图标（如“此电脑”）"><a href="#1-显示桌面图标（如“此电脑”）" class="headerlink" title="1. 显示桌面图标（如“此电脑”）"></a>1. 显示桌面图标（如“此电脑”）</h3><ul><li>桌面右键选择「个性化」-「主题」-「桌面图标设置」，勾选想要显示的图标（此电脑、回收站等），桌面瞬间丰富。</li></ul><p><img src="https://ipak.ipason.com/images/2930f57f-5154-42a2-9158-817487fdcf48.png" alt="win11优化"></p><h3 id="2-显示文件扩展名与隐藏文件"><a href="#2-显示文件扩展名与隐藏文件" class="headerlink" title="2. 显示文件扩展名与隐藏文件"></a>2. 显示文件扩展名与隐藏文件</h3><ul><li>打开「此电脑」，点击顶部「查看」，在“显示”中勾选「文件扩展名」和「隐藏的项目」，就能看到文件后缀和系统隐藏文件。</li></ul><h2 id="七、电源与休眠设置，平衡性能与节能"><a href="#七、电源与休眠设置，平衡性能与节能" class="headerlink" title="七、电源与休眠设置，平衡性能与节能"></a>七、电源与休眠设置，平衡性能与节能</h2><p>根据使用场景调整电源计划，既能满足性能需求，又能节省电量：</p><ul><li>打开「设置」-「系统」-「电源和电池」，在“电源模式”中选择适合的方案（如“最佳性能”适合游戏&#x2F;重度工作，“平衡”适合日常办公）。</li><li>在“休眠和睡眠”设置中，按需调整显示器关闭时间、电脑休眠时间，避免自动休眠影响下载或工作。</li></ul><p>通过以上这些优化步骤，你的 Windows 11 系统就能变得更加简洁、流畅，用起来顺心顺手~ 如果你在操作过程中遇到问题，欢迎在评论区留言交流～</p><blockquote><p>本文灵感与操作演示源自抖音博主「戴同学啥都玩」的 Windows 11 优化视频（<a href="https://v.douyin.com/ihPXXXX/">点击跳转原视频</a>），感谢博主的实用分享～</p></blockquote>]]></content>
    
    
    <summary type="html">想让 Windows 11 系统告别广告骚扰、卡顿延迟？本文手把手教你关闭系统广告、暂停自动更新、自动清理垃圾、优化开机启动项等实用技巧，还分享动效调整、图标显示、电源设置等细节优化，助你打造清爽流畅的 Windows 11 系统，操作简单易懂，新手也能轻松上手！</summary>
    
    
    
    <category term="技术指南" scheme="https://www.eryang.top/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/"/>
    
    <category term="Windows" scheme="https://www.eryang.top/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/Windows/"/>
    
    
    <category term="Windows11" scheme="https://www.eryang.top/tags/Windows11/"/>
    
    <category term="系统优化" scheme="https://www.eryang.top/tags/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 博客嵌入弹幕视频：hexo-tag-dplayer 插件全指南</title>
    <link href="https://www.eryang.top/2025/07/16/hexo-tag-dplayer/"/>
    <id>https://www.eryang.top/2025/07/16/hexo-tag-dplayer/</id>
    <published>2025-07-15T16:00:00.000Z</published>
    <updated>2025-07-27T11:12:07.824Z</updated>
    
    <content type="html"><![CDATA[<p>如果你想给 Hexo 博客的文章添加一个支持弹幕、截图、快捷键的高颜值视频播放器，那么 <code>hexo-tag-dplayer</code> 插件绝对值得一试。这款插件将开源播放器 DPlayer 无缝集成到 Hexo 中，让你轻松实现类似 B 站的视频互动体验。今天就来详细聊聊它的安装、使用和进阶技巧。</p><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px; width:100%;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"autoplay":true,"theme":"#FADFA3","video":{"url":"https://upyun.eryang.top/video/xbox%E9%BB%91%E7%A5%9E%E8%AF%9D%E6%82%9F%E7%A9%BA.mp4","pic":"https://picx.zhimg.com/v2-377d8014c2b5e535de12ec229627680a_r.jpg?source=12a79843"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><h2 id="关于-hexo-tag-dplayer"><a href="#关于-hexo-tag-dplayer" class="headerlink" title="关于 hexo-tag-dplayer"></a>关于 hexo-tag-dplayer</h2><p><code>hexo-tag-dplayer</code> 是一款将 DPlayer 播放器集成到 Hexo 的插件，由开发者基于 DIYgod 的 DPlayer 移植而来，借鉴了 hexo-tag-aplayer 的实现思路。用官方的话说：“本项目是将 DIYgod 的 DPlayer 运行在 Hexo 的插件”。</p><blockquote><p>有趣的是，官方文档里还自嘲：“这个项目的两个维护者一个只会卖萌，一个又沉迷屁股（这是豆子），所以有什么 bug 很长时间没解决的，请谅解”。如果遇到问题，也欢迎提交 PR 参与修复哦~</p></blockquote><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>在 Hexo 博客根目录下，通过 npm 即可快速安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-tag-dplayer --save<br></code></pre></td></tr></table></figure><p><img src="https://upyun.eryang.top/img/install-hexo-tag-dplayer.png" alt="npm install hexo-tag-dplayer --save"></p><p>安装完成后无需额外配置，直接在文章中使用标签即可调用播放器。</p><h2 id="基本用法：通过标签嵌入播放器"><a href="#基本用法：通过标签嵌入播放器" class="headerlink" title="基本用法：通过标签嵌入播放器"></a>基本用法：通过标签嵌入播放器</h2><p>在 Markdown 文章中，使用 <code>&#123;% dplayer %&#125;</code> 标签即可嵌入播放器，语法格式为：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% dplayer key=value ... %&#125;<br></code></pre></td></tr></table></figure><p>其中 <code>key</code> 对应 DPlayer 的配置参数，支持多种类型的参数（布尔值、字符串、数字等）。下面是常用参数的详细说明：</p><h3 id="1-基础播放参数"><a href="#1-基础播放参数" class="headerlink" title="1. 基础播放参数"></a>1. 基础播放参数</h3><table><thead><tr><th>参数</th><th>类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>autoplay</code></td><td>布尔值</td><td>是否自动播放（启用值：<code>yes</code>&#x2F;<code>y</code>&#x2F;<code>true</code>&#x2F;<code>1</code>，或直接写参数名）</td><td><code>autoplay=yes</code> 或 <code>autoplay</code></td></tr><tr><td><code>loop</code></td><td>布尔值</td><td>是否循环播放</td><td><code>loop=true</code></td></tr><tr><td><code>screenshot</code></td><td>布尔值</td><td>是否允许截图（需视频支持）</td><td><code>screenshot=1</code></td></tr><tr><td><code>hotkey</code></td><td>布尔值</td><td>是否启用快捷键（空格暂停、方向键快进等）</td><td><code>hotkey=y</code></td></tr><tr><td><code>url</code></td><td>字符串</td><td>视频资源地址（本地&#x2F;网络 URL）</td><td><code>url=https://example.com/video.mp4</code></td></tr><tr><td><code>pic</code></td><td>字符串</td><td>视频封面图片地址</td><td><code>pic=./cover.jpg</code></td></tr><tr><td><code>volume</code></td><td>数字</td><td>初始音量（0-1 之间）</td><td><code>volume=0.5</code>（50% 音量）</td></tr><tr><td><code>theme</code></td><td>字符串</td><td>播放器主题色</td><td><code>theme=#FADFA3</code></td></tr><tr><td><code>width</code>&#x2F;<code>height</code></td><td>字符串</td><td>播放器尺寸（CSS 格式）</td><td><code>width=100%</code> <code>height=400px</code></td></tr></tbody></table><h3 id="2-弹幕功能参数"><a href="#2-弹幕功能参数" class="headerlink" title="2. 弹幕功能参数"></a>2. 弹幕功能参数</h3><p>DPlayer 最具特色的就是弹幕功能，配置以下参数即可启用：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>id</code></td><td>视频唯一标识（用于区分不同视频的弹幕）</td></tr><tr><td><code>api</code></td><td>弹幕接口地址（如官方示例 <code>https://api.prprpr.me/dplayer/</code>）</td></tr><tr><td><code>token</code></td><td>弹幕接口验证令牌（可选）</td></tr><tr><td><code>dmuser</code></td><td>发送弹幕时的默认用户名</td></tr><tr><td><code>addition</code></td><td>额外弹幕数据源（JSON 地址）</td></tr></tbody></table><h3 id="3-字幕功能参数"><a href="#3-字幕功能参数" class="headerlink" title="3. 字幕功能参数"></a>3. 字幕功能参数</h3><p>如果需要为视频添加字幕，可配置这些参数：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>suburl</code></td><td>字幕文件地址（支持 .vtt 格式）</td></tr><tr><td><code>subtype</code></td><td>字幕类型（默认 <code>webvtt</code>）</td></tr><tr><td><code>subcolor</code></td><td>字幕颜色</td></tr><tr><td><code>subbottom</code></td><td>字幕距离底部的距离（如 <code>20px</code>）</td></tr></tbody></table><h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><h3 id="示例-1：基础视频播放（带封面和自动播放）"><a href="#示例-1：基础视频播放（带封面和自动播放）" class="headerlink" title="示例 1：基础视频播放（带封面和自动播放）"></a>示例 1：基础视频播放（带封面和自动播放）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg&quot; &quot;autoplay&quot; &quot;theme=#FADFA3&quot; &quot;width=100%&quot; %&#125;<br></code></pre></td></tr></table></figure><p>这段代码会生成一个自适应宽度、自动播放、主题色为浅橙色的播放器，并显示指定封面。</p><h3 id="示例-2：带弹幕的循环播放视频"><a href="#示例-2：带弹幕的循环播放视频" class="headerlink" title="示例 2：带弹幕的循环播放视频"></a>示例 2：带弹幕的循环播放视频</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% dplayer &quot;url=./videos/my-video.mp4&quot; &quot;loop=yes&quot; &quot;screenshot=yes&quot; &quot;id=my-video-id&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;dmuser=访客&quot; &quot;hotkey=yes&quot; %&#125;<br></code></pre></td></tr></table></figure><p>这里启用了循环播放、截图功能和快捷键，同时通过 <code>id</code> 和 <code>api</code> 配置了弹幕接口，用户可以发送和查看弹幕。</p><h3 id="示例-3：带字幕的视频"><a href="#示例-3：带字幕的视频" class="headerlink" title="示例 3：带字幕的视频"></a>示例 3：带字幕的视频</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% dplayer &quot;url=https://example.com/movie.mp4&quot; &quot;suburl=https://example.com/subtitles.vtt&quot; &quot;subcolor=#ffffff&quot; &quot;subbottom=15px&quot; &quot;volume=0.3&quot; %&#125;<br></code></pre></td></tr></table></figure><p>该示例为视频添加了白色字幕，字幕位置距离底部 15px，初始音量 30%。</p><h2 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h2><p>如果需要全局修改播放器的默认参数（如默认主题色、脚本路径等），可以在 Hexo 根目录的 <code>_config.yml</code> 中添加配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">hexo-tag-dplayer:</span><br>  <span class="hljs-attr">js_path:</span> <span class="hljs-string">/assets/js/dplayer/</span> <span class="hljs-comment"># DPlayer 脚本文件路径（默认自动加载）</span><br>  <span class="hljs-attr">css_path:</span> <span class="hljs-string">/assets/css/dplayer/</span> <span class="hljs-comment"># 样式文件路径</span><br>  <span class="hljs-attr">default:</span> <span class="hljs-comment"># 所有播放器的默认参数</span><br>    <span class="hljs-attr">theme:</span> <span class="hljs-string">&quot;#4285F4&quot;</span> <span class="hljs-comment"># 默认主题色（谷歌蓝）</span><br>    <span class="hljs-attr">volume:</span> <span class="hljs-number">0.2</span> <span class="hljs-comment"># 默认音量 20%</span><br>    <span class="hljs-attr">api:</span> <span class="hljs-string">https://api.prprpr.me/dplayer/</span> <span class="hljs-comment"># 默认弹幕接口</span><br></code></pre></td></tr></table></figure><p>配置后，所有 <code>&#123;% dplayer %&#125;</code> 标签都会继承这些默认参数，无需重复设置。</p><h2 id="解决常见问题"><a href="#解决常见问题" class="headerlink" title="解决常见问题"></a>解决常见问题</h2><h3 id="1-支持-PJAX-页面切换"><a href="#1-支持-PJAX-页面切换" class="headerlink" title="1. 支持 PJAX 页面切换"></a>1. 支持 PJAX 页面切换</h3><p>如果你的博客使用 PJAX 实现无刷新跳转，需要在 PJAX 事件中销毁播放器，避免重复加载导致的冲突：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;pjax:start&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">dplayers</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-variable language_">window</span>.<span class="hljs-property">dplayers</span>.<span class="hljs-property">length</span>; i++) &#123;<br>      <span class="hljs-variable language_">window</span>.<span class="hljs-property">dplayers</span>[i].<span class="hljs-title function_">destroy</span>();<br>    &#125;<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">dplayers</span> = [];<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="2-插件-Bug-临时解决方案"><a href="#2-插件-Bug-临时解决方案" class="headerlink" title="2. 插件 Bug 临时解决方案"></a>2. 插件 Bug 临时解决方案</h3><p>如果遇到插件未修复的 Bug，可以直接使用 Hexo 的 <code></code> 标签嵌入 DPlayer 原生代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% raw %&#125;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dplayer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dplayer&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/dplayer@1.27.1/dist/DPlayer.min.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br>var dp = new DPlayer(&#123;<br><span class="hljs-code">    container: document.getElementById(&#x27;dplayer&#x27;),</span><br><span class="hljs-code">    autoplay: false,</span><br><span class="hljs-code">    theme: &#x27;#FADFA3&#x27;,</span><br><span class="hljs-code">    loop: true,</span><br><span class="hljs-code">    video: &#123;</span><br><span class="hljs-code">        url: &#x27;demo.mp4&#x27;,</span><br><span class="hljs-code">        pic: &#x27;demo.png&#x27;</span><br><span class="hljs-code">    &#125;,</span><br><span class="hljs-code">    danmaku: &#123;</span><br><span class="hljs-code">        id: &#x27;demo&#x27;,</span><br><span class="hljs-code">        api: &#x27;https://api.prprpr.me/dplayer/&#x27;</span><br><span class="hljs-code">    &#125;</span><br><span class="hljs-code">&#125;);</span><br><span class="hljs-code">&lt;/script&gt;</span><br><span class="hljs-code">&#123;% endraw %&#125;</span><br></code></pre></td></tr></table></figure><p>这种方式绕过插件直接调用 DPlayer，适合临时解决兼容性问题。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p><code>hexo-tag-dplayer</code> 插件让 Hexo 博客的视频展示变得简单而强大，无论是分享教程、音乐 MV 还是个人作品，都能通过弹幕和互动功能提升读者参与感。虽然官方自嘲维护精力有限，但插件的核心功能已经相当稳定，对于大多数博客场景来说足够实用。</p><p>如果你的博客需要嵌入视频，不妨试试这款插件，让文章内容更加生动~ 也欢迎参与项目贡献，一起完善这个工具！</p><blockquote><p>参考资料：<a href="https://github.com/...">hexo-tag-dplayer 官方文档</a>、<a href="https://github.com/DIYgod/DPlayer">DPlayer 官方仓库</a></p></blockquote>]]></content>
    
    
    <summary type="html">想在 Hexo 博客中嵌入带弹幕、支持截图和快捷键的高颜值视频播放器？本文详解 hexo-tag-dplayer 插件的使用指南，包括安装步骤、基础用法（通过标签调用播放器，含播放参数、弹幕功能、字幕配置等）、实用示例、自定义全局配置，以及解决 PJAX 兼容、插件 Bug 等常见问题，助你轻松实现类似 B 站的视频互动体验。</summary>
    
    
    
    <category term="Hexo" scheme="https://www.eryang.top/categories/Hexo/"/>
    
    <category term="插件教程" scheme="https://www.eryang.top/categories/Hexo/%E6%8F%92%E4%BB%B6%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Hexo" scheme="https://www.eryang.top/tags/Hexo/"/>
    
    <category term="DPlayer" scheme="https://www.eryang.top/tags/DPlayer/"/>
    
    <category term="视频播放器，弹幕功能" scheme="https://www.eryang.top/tags/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%8C%E5%BC%B9%E5%B9%95%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>《黑神话：悟空》登陆Xbox：一场跨越平台的东方神话冒险</title>
    <link href="https://www.eryang.top/2025/07/15/%E9%BB%91%E7%A5%9E%E8%AF%9D%E6%82%9F%E7%A9%BA%E7%99%BB%E9%99%86Xbox/"/>
    <id>https://www.eryang.top/2025/07/15/%E9%BB%91%E7%A5%9E%E8%AF%9D%E6%82%9F%E7%A9%BA%E7%99%BB%E9%99%86Xbox/</id>
    <published>2025-07-15T13:36:29.000Z</published>
    <updated>2025-07-20T08:26:30.458Z</updated>
    
    <content type="html"><![CDATA[<p>继在 PS5、Steam 等平台创下销量奇迹后，《黑神话：悟空》终于在 2025 年 8 月 20 日正式登陆 Xbox Series X|S 平台。这款承载着无数玩家期待的国产 3A 大作，历经近一年的技术攻坚，为 Xbox 玩家揭开了东方神话世界的神秘面纱。</p><h2 id="一、迟到的惊喜：从技术难题到终成现实"><a href="#一、迟到的惊喜：从技术难题到终成现实" class="headerlink" title="一、迟到的惊喜：从技术难题到终成现实"></a>一、迟到的惊喜：从技术难题到终成现实</h2><div id="dplayer3" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px; width:100%;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer3"),"autoplay":true,"theme":"#FADFA3","video":{"url":"https://upyun.eryang.top/video/xbox%E9%BB%91%E7%A5%9E%E8%AF%9D%E6%82%9F%E7%A9%BA.mp4","pic":"https://picx.zhimg.com/v2-377d8014c2b5e535de12ec229627680a_r.jpg?source=12a79843"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p>《黑神话：悟空》首发时并未登陆 Xbox 平台，核心原因在于微软对“全系主机适配”的严格要求——尤其是 Xbox Series S 的硬件限制带来的移植挑战。这款主机仅配备 10GB 共享内存，与 PS5 的 16GB GDDR6 内存差距明显，而游戏采用虚幻引擎 5 打造的高精度模型、动态开放世界，对硬件性能要求极高。</p><p>开发团队游戏科学耗时近一年突破技术瓶颈：</p><ul><li>通过<strong>多线程渲染优化</strong>提升画面加载效率</li><li>采用<strong>动态内存压缩技术</strong>，在有限硬件中保留核心画质</li><li>针对 Series S 优化光影效果与纹理细节，平衡帧率与视觉表现</li></ul><p>官方在公告中强调：“我们没有为了妥协而降低游戏的核心体验，每一处调整都以‘让玩家感受原汁原味的神话冒险’为目标。”</p><h2 id="二、预购与体验：优惠与品质的双重吸引力"><a href="#二、预购与体验：优惠与品质的双重吸引力" class="headerlink" title="二、预购与体验：优惠与品质的双重吸引力"></a>二、预购与体验：优惠与品质的双重吸引力</h2><p><img src="https://upyun.eryang.top/img/Xbox%E9%BB%91%E7%94%9F%E8%AF%9D%E6%82%9F%E7%A9%BA1.png" alt="Xbox商店预购界面截图"></p><p><img src="https://upyun.eryang.top/img/Xbox%E9%BB%91%E7%94%9F%E8%AF%9D%E6%82%9F%E7%A9%BA2.png" alt="Xbox商店预购界面截图"></p><p>为回馈玩家期待，Xbox 版开启了为期三周的预购优惠，<strong>预购链接：<a href="https://www.xbox.com/zh-HK/games/store/44cq6acq6lo844cr6bur56we6kmx77ya5okf56m6/9P2691N36RHP/0017">《黑神话：悟空》Xbox 商店页面</a></strong></p><p>预购权益包括：</p><ul><li>全球 Xbox 用户（非中国大陆地区）可直接通过链接进入微软商店预购</li><li>享受<strong>20%首发折扣</strong>，折后价低至 39.99 美元</li><li>预购用户可提前解锁“筋斗云坐骑皮肤”专属奖励</li></ul><p>从实际体验来看，Xbox Series X 版本支持 4K&#x2F;60 帧运行，画面表现与 PS5 版基本持平；Series S 版本则以 1080P&#x2F;30 帧为基础，通过动态分辨率技术保证流畅度，数毛社测试后评价：“在硬件限制下，这样的优化已属惊艳。”</p><h2 id="三、续写传奇：国产-3A-的全球化征程"><a href="#三、续写传奇：国产-3A-的全球化征程" class="headerlink" title="三、续写传奇：国产 3A 的全球化征程"></a>三、续写传奇：国产 3A 的全球化征程</h2><p>此前，《黑神话：悟空》已在其他平台创下惊人成绩：</p><ul><li>全平台销量突破 1500 万套，销售额超 120 亿元</li><li>Steam 同时在线峰值 240 万，位列平台历史第二</li><li>获 TGA 2024“最佳动作冒险游戏”提名</li></ul><p>此次登陆 Xbox，不仅填补了平台空白，更让全球更多玩家有机会接触中国神话题材的 3A 作品。正如游戏科学创始人冯骥所说：“我们希望通过技术与文化的结合，让‘悟空’成为跨越国界的文化符号。”</p><p>无论是对玩家还是行业，《黑神话：悟空》登陆 Xbox 都是一场意义非凡的“会师”。它不仅打破了“国产 3A 难以适配多平台”的偏见，更证明了优质内容在全球市场的竞争力。如果你是 Xbox 玩家，不妨通过**<a href="https://www.xbox.com/zh-HK/games/store/44cq6acq6lo844cr6bur56we6kmx77ya5okf56m6/9P2691N36RHP/0017">预购链接</a>** 踏上这场迟到一年的神话冒险，在金箍棒的光影中，感受东方奇幻的独特魅力。</p>]]></content>
    
    
    <summary type="html">《黑神话：悟空》于 2025 年 8 月 20 日登陆 Xbox Series X|S 平台！本文详解游戏克服 Xbox Series S 硬件限制的技术优化，介绍预购优惠（20% 折扣、专属坐骑皮肤）及不同机型实际体验，回顾其全球销量与荣誉，看这款国产 3A 如何续写全球化征程，为 Xbox 玩家带来原汁原味的东方神话冒险。</summary>
    
    
    
    <category term="游戏" scheme="https://www.eryang.top/categories/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="xbox" scheme="https://www.eryang.top/categories/%E6%B8%B8%E6%88%8F/xbox/"/>
    
    
    <category term="游戏" scheme="https://www.eryang.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="xbox" scheme="https://www.eryang.top/tags/xbox/"/>
    
    <category term="黑神话：悟空" scheme="https://www.eryang.top/tags/%E9%BB%91%E7%A5%9E%E8%AF%9D%EF%BC%9A%E6%82%9F%E7%A9%BA/"/>
    
  </entry>
  
  <entry>
    <title>幻想生活i：转圈圈的龙和偷取时间的少女——慢生活角色扮演游戏推荐</title>
    <link href="https://www.eryang.top/2025/07/14/%E5%B9%BB%E6%83%B3%E7%94%9F%E6%B4%BBi/"/>
    <id>https://www.eryang.top/2025/07/14/%E5%B9%BB%E6%83%B3%E7%94%9F%E6%B4%BBi/</id>
    <published>2025-07-14T13:05:36.000Z</published>
    <updated>2025-07-18T14:31:25.191Z</updated>
    
    <content type="html"><![CDATA[<p>作为一款备受期待的慢生活角色扮演游戏，《幻想生活i：转圈圈的龙和偷取时间的少女》为玩家打造了一个可自由探索、随心生活的幻想世界。无论是钓鱼做饭、建设岛屿，还是与伙伴并肩战斗，14种特色职业的自由切换让每一段冒险都充满惊喜。</p><p><img src="https://shared.cdn.queniuqe.com/store_item_assets/steam/apps/2993780/e3846ed0e0a245838b4941a74dd76523af344018/library_hero.jpg?t=1747546958" alt="幻想生活i 游戏封面"></p><h2 id="游戏核心亮点"><a href="#游戏核心亮点" class="headerlink" title="游戏核心亮点"></a>游戏核心亮点</h2><h3 id="穿梭时空的冒险故事"><a href="#穿梭时空的冒险故事" class="headerlink" title="穿梭时空的冒险故事"></a>穿梭时空的冒险故事</h3><p>你将与考古学家爱德华一同航海，循着龙骨化石的奇异光芒抵达一座未知无人岛。深不见底的深坑、骸骨姿态的神秘巨龙、少女“拯救世界”的讯息……一场横跨1000年前繁荣时代与现代的时空之旅即将展开，岛屿灭亡的真相等待你来揭晓。</p><h3 id="14种职业，百态人生"><a href="#14种职业，百态人生" class="headerlink" title="14种职业，百态人生"></a>14种职业，百态人生</h3><p>“职业（Life）”是游戏的核心玩法，每种职业都承载着独特的乐趣：</p><ul><li><strong>采集职业</strong>：深入自然采集食材与素材，感受大自然的馈赠；</li><li><strong>制作职业</strong>：沉浸于烹饪与锻造，亲手打造美食、武器与装备；</li><li><strong>战斗职业</strong>：直面怪物挑战，体验紧张刺激的对抗与成长。</li></ul><p>随时切换职业，在不同身份中体验多样人生，让冒险不再局限于单一轨迹。</p><p><img src="https://shared.cdn.queniuqe.com/store_item_assets/steam/apps/2993780/ss_790f3c235f2be0dc4b35f5c271efa02acb4f8f80.1920x1080.jpg?t=1747546958" alt="幻想生活i 职业体验画面"></p><h3 id="打造专属岛屿家园"><a href="#打造专属岛屿家园" class="headerlink" title="打造专属岛屿家园"></a>打造专属岛屿家园</h3><p>从荒芜荒岛到繁荣家园，全凭你的创意与双手：</p><ul><li>建造房屋、布置家具，打造个性化居所；</li><li>改造地形、铺设道路、开凿河流，自定义岛屿地貌；</li><li>用各职业产出的资源赋予岛屿生命力，让每一寸土地都彰显你的风格。</li></ul><p><img src="https://shared.cdn.queniuqe.com/store_item_assets/steam/apps/2993780/ss_353cde7c46a42521ae5c3e59bca299e9a9cf9df8.1920x1080.jpg?t=1747546958" alt="幻想生活i 岛屿建设画面"></p><h3 id="广阔开放世界与多人乐趣"><a href="#广阔开放世界与多人乐趣" class="headerlink" title="广阔开放世界与多人乐趣"></a>广阔开放世界与多人乐趣</h3><ul><li><strong>自由探索</strong>：攀爬悬崖、畅游水域、骑乘坐骑，在系列最大规模的开放世界中解锁隐藏角落；</li><li><strong>多人互动</strong>：支持4人联机探险，邀请好友共闯地下迷宫；本地双人模式让身边伙伴无需联网即可一同冒险，共享游戏乐趣。</li></ul><p><img src="https://shared.cdn.queniuqe.com/store_item_assets/steam/apps/2993780/ss_0cd0d982f3a5d48140a088c9d1dfdb91ea7456a3.1920x1080.jpg?t=1747546958" alt="幻想生活i 开放世界探索画面"></p><h2 id="预购特典信息（已结束）"><a href="#预购特典信息（已结束）" class="headerlink" title="预购特典信息（已结束）"></a>预购特典信息（已结束）</h2><p>此前预购的玩家可获得“新手冒险家礼包”，包含提升经验值的“蝴蝶吊坠”及9种实用消耗道具，为初期冒险提供助力（预购截止时间：2025年5月21日22:59 北京时间）。</p>]]></content>
    
    
    <summary type="html">《幻想生活 i：转圈圈的龙和偷取时间的少女》是一款主打慢生活的 Switch 角色扮演游戏。游戏以穿梭时空的冒险故事为核心，玩家将探索未知岛屿，揭开岛屿灭亡的真相；14 种职业自由切换，涵盖采集、制作、战斗等多样体验；还能打造专属岛屿家园，在广阔开放世界中自由探索，支持 4 人联机与本地双人模式，带来丰富的多人乐趣。</summary>
    
    
    
    <category term="游戏" scheme="https://www.eryang.top/categories/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="switch" scheme="https://www.eryang.top/categories/%E6%B8%B8%E6%88%8F/switch/"/>
    
    
    <category term="游戏" scheme="https://www.eryang.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="switch" scheme="https://www.eryang.top/tags/switch/"/>
    
    <category term="幻想生活i" scheme="https://www.eryang.top/tags/%E5%B9%BB%E6%83%B3%E7%94%9F%E6%B4%BBi/"/>
    
  </entry>
  
  <entry>
    <title>Windows 系统镜像官方获取与安装指南（含 Windows 11/10/7）</title>
    <link href="https://www.eryang.top/2025/07/13/Win%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD/"/>
    <id>https://www.eryang.top/2025/07/13/Win%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD/</id>
    <published>2025-07-12T16:08:48.000Z</published>
    <updated>2025-07-22T17:22:36.836Z</updated>
    
    <content type="html"><![CDATA[<p>对于需要重装或升级 Windows 系统的用户，获取官方正版镜像并正确安装是保障系统安全与稳定的关键。本文将详细介绍 Windows 11、Windows 10、Windows 7 官方镜像的正规获取渠道、安装步骤及常见问题解决方法，帮助你高效完成系统部署。</p><h2 id="一、官方镜像获取渠道（推荐）"><a href="#一、官方镜像获取渠道（推荐）" class="headerlink" title="一、官方镜像获取渠道（推荐）"></a>一、官方镜像获取渠道（推荐）</h2><p>为避免使用非官方镜像带来的恶意软件风险及版权问题，<strong>强烈建议通过微软官方渠道获取系统镜像</strong>，以下是各版本的正规获取方式：</p><h3 id="1-Windows-11-官方镜像"><a href="#1-Windows-11-官方镜像" class="headerlink" title="1. Windows 11 官方镜像"></a>1. Windows 11 官方镜像</h3><ul><li><strong>版本信息</strong>：Windows 11 (consumer editions), version 24H2（2025 年 6 月更新，简体中文）</li><li><strong>架构</strong>：64 位（当前主流机型推荐）</li><li><strong>发布时间</strong>：2021 年 10 月（持续更新中）</li><li><strong>官方获取入口</strong>：<br>访问 <a href="https://www.microsoft.com/zh-cn/software-download/windows11">微软官网 Windows 11 下载页面</a>，可选择“下载 Windows 11 磁盘映像（ISO）”或使用“媒体创建工具”制作安装介质。</li></ul><p><img src="https://pic.rmb.bdstatic.com/bjh/down/cbf6ef5f276d93ef32f6c36ffabf559e.png" alt="Windows 11 系统界面"></p><p><img src="https://upyun.eryang.top/img/win11dow.jpg" alt="Windows 11 系统下载界面"></p><p><strong>同时二阳也提前为大家从官方下载好了 Win11 镜像并附上链接</strong></p><blockquote><p>123 云盘 <a href="https://www.123865.com/s/8vTKVv-b3Ql3?%E6%8F%90%E5%8F%96%E7%A0%81:1234">https://www.123865.com/s/8vTKVv-b3Ql3?提取码:1234</a></p></blockquote><h3 id="2-Windows-10-官方镜像"><a href="#2-Windows-10-官方镜像" class="headerlink" title="2. Windows 10 官方镜像"></a>2. Windows 10 官方镜像</h3><ul><li><strong>版本信息</strong>：Windows 10 (consumer editions), version 22H2（2025 年 6 月更新，简体中文）</li><li><strong>架构</strong>：64 位&#x2F;32 位（根据设备配置选择，64 位支持更大内存）</li><li><strong>发布时间</strong>：2015 年 7 月（持续更新中）</li><li><strong>官方获取入口</strong>：<br>访问 <a href="https://www.microsoft.com/zh-cn/software-download/windows10">微软官网 Windows 10 下载页面</a>，通过“媒体创建工具”下载或直接获取 ISO 镜像。</li></ul><p><img src="https://upyun.eryang.top/img/win10dow.jpg" alt="Windows 10 系统下载界面"></p><p><strong>同时二阳也提前为大家从官方下载好了 Win10 镜像并附上链接</strong></p><blockquote><p>123 云盘 <a href="https://www.123865.com/s/8vTKVv-Z3Ql3?%E6%8F%90%E5%8F%96%E7%A0%81:puKT">https://www.123865.com/s/8vTKVv-Z3Ql3?提取码:puKT</a></p></blockquote><h3 id="3-Windows-7-官方镜像（注意：微软已停止支持）"><a href="#3-Windows-7-官方镜像（注意：微软已停止支持）" class="headerlink" title="3. Windows 7 官方镜像（注意：微软已停止支持）"></a>3. Windows 7 官方镜像（注意：微软已停止支持）</h3><ul><li><strong>版本信息</strong>：Windows 7 Ultimate with Service Pack 1（简体中文，旗舰版）</li><li><strong>架构</strong>：64 位&#x2F;32 位</li><li><strong>发布时间</strong>：2009 年 10 月（微软已于 2020 年 1 月停止安全更新，仅建议旧设备临时使用）</li><li><strong>官方获取说明</strong>：<br>微软官网已不再提供直接下载，如需使用，可通过拥有正版授权的渠道（如品牌机附带的恢复介质）获取，或联系微软授权服务商。</li></ul><p><img src="https://static.itellyou.cn/images/windows_7/pic1.jpg" alt="Windows 7 系统界面"></p><h2 id="二、系统安装完整步骤（通用指南）"><a href="#二、系统安装完整步骤（通用指南）" class="headerlink" title="二、系统安装完整步骤（通用指南）"></a>二、系统安装完整步骤（通用指南）</h2><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><ul><li>备份重要数据：安装前请将 C 盘及桌面文件转移至其他分区或外接存储，避免数据丢失。</li><li>制作安装介质：<ul><li>使用微软官方“媒体创建工具”直接制作启动 U 盘（推荐，工具会自动下载并写入镜像）。</li><li>若已获取 ISO 镜像，可使用 Rufus 等工具将镜像刻录到 U 盘（需 8GB 以上空 U 盘）。</li></ul></li></ul><h3 id="2-启动与安装"><a href="#2-启动与安装" class="headerlink" title="2. 启动与安装"></a>2. 启动与安装</h3><ol><li>插入制作好的 U 盘，重启电脑，按主板&#x2F;笔记本品牌对应的启动快捷键（如 F2、F12、Del 等）进入 BIOS&#x2F;UEFI 设置，将 U 盘设为第一启动项。</li><li>重启后进入 Windows 安装界面，选择语言、时区等信息，点击“下一步”。</li><li>输入正版产品密钥（若无，可选择“我没有产品密钥”，安装后在系统设置中补填）。</li><li>选择需要安装的系统版本（需与密钥对应），同意许可条款后，选择“自定义：仅安装 Windows（高级）”。</li><li>选择目标分区（建议格式化 C 盘），点击“下一步”，系统将自动完成安装，期间会多次重启。</li></ol><h3 id="3-激活与驱动配置"><a href="#3-激活与驱动配置" class="headerlink" title="3. 激活与驱动配置"></a>3. 激活与驱动配置</h3><ul><li>系统安装完成后，进入“设置 → 系统 → 激活”，输入正版密钥完成激活。</li><li>安装驱动：通过品牌官网下载对应型号的驱动程序（或使用“设备管理器”自动更新），确保网卡、显卡等硬件正常工作。</li></ul><h2 id="三、常见问题解决"><a href="#三、常见问题解决" class="headerlink" title="三、常见问题解决"></a>三、常见问题解决</h2><h3 id="1-镜像校验与完整性验证"><a href="#1-镜像校验与完整性验证" class="headerlink" title="1. 镜像校验与完整性验证"></a>1. 镜像校验与完整性验证</h3><p>下载的镜像文件可能因网络问题损坏，可通过以下方式验证：</p><ul><li>安装 HashTab 等哈希校验工具，右键文件选择“属性 → 文件哈希”，对比计算出的 MD5&#x2F;SHA1 值与微软官方提供的值是否一致（不一致则需重新下载）。</li></ul><h3 id="2-安装时提示“无法安装到该分区”"><a href="#2-安装时提示“无法安装到该分区”" class="headerlink" title="2. 安装时提示“无法安装到该分区”"></a>2. 安装时提示“无法安装到该分区”</h3><ul><li>原因：分区格式不支持（如 GPT 分区需配合 UEFI 启动，MBR 分区需配合 Legacy 启动）。</li><li>解决：进入磁盘管理工具，根据启动模式格式化分区（建议新设备使用 GPT+UEFI，兼容性更好）。</li></ul><h3 id="3-激活失败怎么办？"><a href="#3-激活失败怎么办？" class="headerlink" title="3. 激活失败怎么办？"></a>3. 激活失败怎么办？</h3><ul><li>检查密钥是否输入正确，或确认密钥与系统版本匹配（如家庭版密钥无法激活专业版）。</li><li>若为正版密钥激活失败，可联系微软客服（<a href="https://support.microsoft.com/zh-cn">微软支持中心</a>）协助解决。</li></ul><h2 id="四、重要提醒"><a href="#四、重要提醒" class="headerlink" title="四、重要提醒"></a>四、重要提醒</h2><ol><li><strong>版权与合规性</strong>：使用 Windows 系统需遵守微软版权协议，未激活的系统会有功能限制（如无法个性化设置），建议通过官方渠道购买正版密钥。</li><li><strong>安全风险提示</strong>：非官方镜像可能被篡改植入恶意程序，导致数据泄露或系统故障，<strong>坚决抵制盗版镜像</strong>。</li><li><strong>系统支持状态</strong>：Windows 7 已停止安全更新，存在较高安全风险，建议升级至 Windows 10 或 11 以获得持续保护。</li></ol><p>通过以上步骤，你可以安全、合规地完成 Windows 系统的安装与配置。如需进一步帮助，可参考微软官方文档或联系技术支持人员。</p>]]></content>
    
    
    <summary type="html">想安全获取并安装 Windows 系统镜像？本文详解 Windows 11/10/7 官方镜像的正规获取渠道（含微软官网入口及备用下载链接），附完整安装步骤（从制作启动介质到激活驱动配置），还解答镜像校验、分区报错、激活失败等常见问题，助你合规安装稳定系统。</summary>
    
    
    
    <category term="Windows 镜像" scheme="https://www.eryang.top/categories/Windows-%E9%95%9C%E5%83%8F/"/>
    
    
    <category term="Windows 11" scheme="https://www.eryang.top/tags/Windows-11/"/>
    
    <category term="Windows 镜像" scheme="https://www.eryang.top/tags/Windows-%E9%95%9C%E5%83%8F/"/>
    
    <category term="系统镜像下载" scheme="https://www.eryang.top/tags/%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD/"/>
    
    <category term="Windows 10" scheme="https://www.eryang.top/tags/Windows-10/"/>
    
    <category term="Windows 7" scheme="https://www.eryang.top/tags/Windows-7/"/>
    
  </entry>
  
  <entry>
    <title>MAC打开软件提示 已损坏，无法打开。您应该将它移到废纸篓。</title>
    <link href="https://www.eryang.top/2025/07/11/Mac%E8%BD%AF%E4%BB%B6%E6%8D%9F%E5%9D%8F/"/>
    <id>https://www.eryang.top/2025/07/11/Mac%E8%BD%AF%E4%BB%B6%E6%8D%9F%E5%9D%8F/</id>
    <published>2025-07-11T14:14:04.000Z</published>
    <updated>2025-07-27T11:12:24.777Z</updated>
    
    <content type="html"><![CDATA[<p>在 Mac 系统（包括 Intel 芯片及 M1&#x2F;M2&#x2F;M3 等 Apple silicon 机型）中，升级系统后偶尔会遇到软件打开报错的问题：“xxx.app”已损坏，无法打开。您应该将它移到废纸篓。这一问题多与系统安全机制对软件签名的验证有关，以下是详细的解决方法。</p><p><img src="https://img1.baidu.com/it/u=2080014613,2103863658&fm=253&fmt=auto&app=138&f=JPEG?w=1009&h=441" alt="MAC打开软件提示“已损坏，无法打开”错误弹窗"></p><h2 id="解决步骤：通过终端命令移除隔离属性"><a href="#解决步骤：通过终端命令移除隔离属性" class="headerlink" title="解决步骤：通过终端命令移除隔离属性"></a>解决步骤：通过终端命令移除隔离属性</h2><p>当系统提示软件“已损坏”时，通常是因为软件被标记了“隔离属性”（com.apple.quarantine），这是 macOS 对从互联网下载或未签名软件的安全限制。通过终端命令可移除该属性，具体操作如下：</p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px; width:100%;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"autoplay":true,"theme":"#FADFA3","video":{"url":"https://upyun.eryang.top/video/mac%E6%8F%90%E7%A4%BA%E5%B7%B2%E6%8D%9F%E5%9D%8F.mp4","pic":"https://img1.baidu.com/it/u=2080014613,2103863658&fm=253&fmt=auto&app=138&f=JPEG?w=1009&h=441"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><ol><li><p><strong>打开终端</strong><br>点击屏幕左上角苹果图标 → 「启动台」→ 「其他」→ 「终端」，或使用 Spotlight 搜索（按下 <code>Command + 空格</code>，输入“终端”并打开）。</p></li><li><p><strong>输入基础命令</strong><br>在终端中粘贴以下命令（注意命令末尾有一个<strong>空格</strong>，粘贴后先不要按回车）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> xattr -r -d com.apple.quarantine<br></code></pre></td></tr></table></figure><ul><li>命令说明：<code>sudo</code> 表示以管理员权限执行，<code>xattr</code> 是用于管理文件扩展属性的工具，<code>-r -d com.apple.quarantine</code> 意为递归删除文件的“隔离属性”。</li></ul></li><li><p><strong>拖拽软件路径到终端</strong><br>打开「访达（Finder）」→ 进入「应用程序」文件夹，找到报错的软件图标，用鼠标将图标<strong>拖拽到终端窗口中</strong>。此时终端会自动补全软件的完整路径，命令将变成类似：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> xattr -r -d com.apple.quarantine /Applications/xxx.app<br></code></pre></td></tr></table></figure><p>（其中 <code>/Applications/xxx.app</code> 为软件在电脑中的实际路径）</p></li><li><p><strong>执行命令并验证</strong><br>按下回车，终端会提示输入“系统密码”（输入时密码不会显示，输完后直接回车即可）。命令执行完成后，关闭终端，重新打开软件即可正常运行。</p></li></ol><h2 id="补充说明：关于软件安全性的提示"><a href="#补充说明：关于软件安全性的提示" class="headerlink" title="补充说明：关于软件安全性的提示"></a>补充说明：关于软件安全性的提示</h2><ul><li>本方法仅用于解决<strong>合法获取的软件</strong>（如正版软件、开源软件）因系统误判导致的打开问题。若软件来自非官方渠道（如盗版、破解包），可能存在恶意程序风险，建议谨慎使用。</li><li>若执行命令后仍报错，可尝试在「系统设置」→「隐私与安全性」中，勾选“允许从以下位置下载的应用：App Store 和被认可的开发者”，并在下方找到对应软件的提示，点击“仍要打开”。</li></ul><p>通过以上步骤，即可解决多数因系统隔离属性导致的软件“已损坏”问题。建议日常优先使用从官方渠道下载的正版软件，既能保障安全，也能减少兼容性问题。</p>]]></content>
    
    
    <summary type="html">Mac 打开软件时提示 “已损坏，无法打开。您应该将它移到废纸篓”？这多是系统安全机制对软件签名验证导致的。本文详解解决方法：通过终端命令移除软件的 “隔离属性”，包括打开终端、输入基础命令、拖拽软件路径、执行命令等步骤，还补充了软件安全性提示及额外的系统设置调整建议，助你解决该问题。</summary>
    
    
    
    <category term="技术指南" scheme="https://www.eryang.top/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/"/>
    
    
    <category term="Mac 软件错误" scheme="https://www.eryang.top/tags/Mac-%E8%BD%AF%E4%BB%B6%E9%94%99%E8%AF%AF/"/>
    
    <category term="软件已损坏" scheme="https://www.eryang.top/tags/%E8%BD%AF%E4%BB%B6%E5%B7%B2%E6%8D%9F%E5%9D%8F/"/>
    
  </entry>
  
  <entry>
    <title>网络存储器使用手册1.3</title>
    <link href="https://www.eryang.top/2025/07/11/som/"/>
    <id>https://www.eryang.top/2025/07/11/som/</id>
    <published>2025-07-10T16:56:06.000Z</published>
    <updated>2025-07-22T17:39:18.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、服务器基础信息"><a href="#一、服务器基础信息" class="headerlink" title="一、服务器基础信息"></a>一、服务器基础信息</h2><h3 id="（一）服务器地址"><a href="#（一）服务器地址" class="headerlink" title="（一）服务器地址"></a>（一）服务器地址</h3><ul><li><a href="http://yusi.local/">http://yusi.local</a></li><li><a href="http://192.168.31.10/">http://192.168.31.10</a></li></ul><h3 id="（二）服务器连接地址"><a href="#（二）服务器连接地址" class="headerlink" title="（二）服务器连接地址"></a>（二）服务器连接地址</h3><ol><li><strong>Windws 连接地址</strong></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">\\yusi.local<br>\\192.168.31.10<br></code></pre></td></tr></table></figure><p>在 Windows 系统中，使用上述地址可连接到服务器。其中，“\”是 Windows 系统用于访问网络共享资源的特定前缀，后续紧跟服务器的域名（如 yusi.local）或 IP 地址（如 192.168.31.10） 。</p><ol start="2"><li><strong>Mac OS 连接地址</strong></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">smb://yusi.local<br>smb://192.168.31.10<br></code></pre></td></tr></table></figure><p>Mac OS 系统使用“smb:&#x2F;&#x2F;”作为访问 SMB 共享服务的协议前缀，同样后接服务器的域名或 IP 地址来建立连接。SMB（Server Message Block）协议是一种网络文件共享协议，被广泛应用于不同操作系统之间的文件共享场景。</p><h3 id="（三）账号密码"><a href="#（三）账号密码" class="headerlink" title="（三）账号密码"></a>（三）账号密码</h3><p><strong>密码为公司门牌号</strong></p>    <div class="aes-widget">      <div class="aes-content" id="aesContent">        <div class="aes-header">          <h3 class="aes-title">加密内容</h3>          <button class="aes-toggle-btn" onclick="toggleDecrypt(this)">            <i class="fa fa-lock mr-1"></i>解密查看          </button>        </div>        <div class="aes-encrypted" id="aesEncrypted">          U2FsdGVkX1/WOSgU29FQNpYH/ZIfIauCG4GnIhxmhU5ZPxyC6HaD24uO453uMJU6        </div>      </div>            <div class="aes-panel" id="aesPanel" style="display: none;">        <div class="aes-input-group">          <input type="password" id="aesPassword" placeholder="请输入解密密码" class="aes-input">          <button class="aes-submit-btn" onclick="decrypt('U2FsdGVkX1/WOSgU29FQNpYH/ZIfIauCG4GnIhxmhU5ZPxyC6HaD24uO453uMJU6', '密码错误提示')">            <i class="fa fa-unlock-alt mr-1"></i>解密          </button>        </div>        <div class="aes-error" id="aesError" style="display: none;">          <i class="fa fa-exclamation-circle mr-1"></i>密码错误提示        </div>      </div>            <div class="aes-result" id="aesResult" style="display: none;">        <div class="aes-result-header">          <span class="aes-success-icon">            <i class="fa fa-check-circle"></i>          </span>          <h3 class="aes-result-title">解密成功</h3>        </div>        <div class="aes-decrypted" id="aesDecrypted"></div>      </div>    </div>    <script>      function toggleDecrypt(btn) {        const panel = document.getElementById('aesPanel');        panel.style.display = panel.style.display === 'none' ? 'block' : 'none';        btn.innerHTML = panel.style.display === 'none'           ? '<i class="fa fa-lock mr-1"></i>解密查看'           : '<i class="fa fa-chevron-up mr-1"></i>收起';      }      function decrypt(encrypted, errorTip) {        const password = document.getElementById('aesPassword').value.trim();        const errorEl = document.getElementById('aesError');        const resultEl = document.getElementById('aesResult');        const decryptedEl = document.getElementById('aesDecrypted');        const contentEl = document.getElementById('aesContent');        const panelEl = document.getElementById('aesPanel');                // 重置状态        errorEl.style.display = 'none';        resultEl.style.display = 'none';                if (!password) {          showError('请输入密码');          return;        }                try {          // 执行解密          const bytes = CryptoJS.AES.decrypt(encrypted, password);          const decrypted = bytes.toString(CryptoJS.enc.Utf8);                    if (decrypted) {            // 解密成功：替换原始内容为解密结果            decryptedEl.textContent = decrypted;                        // 添加过渡动画            contentEl.style.opacity = '0';            panelEl.style.opacity = '0';                        setTimeout(() => {              contentEl.style.display = 'none';              panelEl.style.display = 'none';              resultEl.style.display = 'block';              resultEl.style.opacity = '0';                            setTimeout(() => {                resultEl.style.opacity = '1';              }, 50);            }, 300);          } else {            showError(errorTip);          }        } catch (e) {          showError(errorTip);        }      }            function showError(message) {        const errorEl = document.getElementById('aesError');        errorEl.textContent = message;        errorEl.style.display = 'block';                // 添加错误抖动动画        errorEl.classList.add('shake');        setTimeout(() => {          errorEl.classList.remove('shake');        }, 500);      }    </script>    <style>      .aes-widget {        max-width: 600px;        margin: 1.5rem 0;        border-radius: 0.75rem;        background: #fff;        box-shadow: 0 4px 20px rgba(0,0,0,0.05);        overflow: hidden;        transition: all 0.3s;      }            .aes-header {        display: flex;        justify-content: space-between;        align-items: center;        padding: 0.75rem 1rem;        background: #f9fafb;        border-bottom: 1px solid #f0f2f5;      }            .aes-title {        margin: 0;        font-size: 1rem;        font-weight: 600;        color: #333;      }            .aes-toggle-btn, .aes-submit-btn {        display: flex;        align-items: center;        padding: 0.375rem 0.75rem;        background: #fff;        border: 1px solid #e2e8f0;        border-radius: 0.375rem;        font-size: 0.875rem;        color: #4a5568;        cursor: pointer;        transition: all 0.2s;      }            .aes-toggle-btn:hover, .aes-submit-btn:hover {        background: #f7fafc;        border-color: #cbd5e0;      }            .aes-submit-btn {        background: #165DFF;        color: #fff;        border-color: #165DFF;      }            .aes-submit-btn:hover {        background: #0e42b3;        border-color: #0e42b3;      }            .aes-encrypted, .aes-decrypted {        padding: 1rem;        font-family: monospace;        font-size: 0.875rem;        white-space: pre-wrap;        word-break: break-all;      }            .aes-encrypted {        background: #f8fafc;        color: #4a5568;      }            .aes-panel {        padding: 1rem;        border-top: 1px solid #f0f2f5;      }            .aes-input-group {        display: flex;        gap: 0.5rem;      }            .aes-input {        flex: 1;        padding: 0.5rem 0.75rem;        border: 1px solid #e2e8f0;        border-radius: 0.375rem;        font-size: 0.875rem;        color: #333;        outline: none;        transition: border-color 0.2s;      }            .aes-input:focus {        border-color: #165DFF;        box-shadow: 0 0 0 2px rgba(22, 93, 255, 0.1);      }            .aes-error {        margin-top: 0.5rem;        padding: 0.5rem;        background: #ffebee;        color: #e53935;        border-radius: 0.375rem;        font-size: 0.875rem;        display: none;      }            .aes-result {        padding: 1rem;        background: #f0fff4;        border-radius: 0.75rem;        display: none;        opacity: 0;        transition: opacity 0.3s;      }            .aes-result-header {        display: flex;        align-items: center;        margin-bottom: 0.75rem;      }            .aes-success-icon {        width: 1.5rem;        height: 1.5rem;        background: #38b000;        color: #fff;        border-radius: 50%;        display: flex;        align-items: center;        justify-content: center;        margin-right: 0.5rem;      }            .aes-result-title {        margin: 0;        font-size: 1rem;        font-weight: 600;        color: #22543d;      }            .aes-decrypted {        background: #fff;        border-radius: 0.375rem;        border: 1px solid #e6ffed;        padding: 0.75rem;      }            /* 动画效果 */      @keyframes shake {        0%, 100% { transform: translateX(0); }        25% { transform: translateX(-5px); }        75% { transform: translateX(5px); }      }            .shake {        animation: shake 0.3s ease-in-out;      }            /* 暗色模式支持 */      @media (prefers-color-scheme: dark) {        .aes-widget {          background: #1a202c;          border-color: #2d3748;        }                .aes-header {          background: #2d3748;          border-color: #4a5568;        }                .aes-title {          color: #e2e8f0;        }                .aes-toggle-btn {          background: #2d3748;          border-color: #4a5568;          color: #e2e8f0;        }                .aes-toggle-btn:hover {          background: #4a5568;        }                .aes-encrypted {          background: #2d3748;          color: #cbd5e0;        }                .aes-panel {          border-color: #4a5568;        }                .aes-input {          background: #2d3748;          border-color: #4a5568;          color: #e2e8f0;        }                .aes-input:focus {          border-color: #165DFF;        }                .aes-error {          background: #450a0a;          color: #fecaca;        }                .aes-result {          background: #064e3b;        }                .aes-result-title {          color: #d1fae5;        }                .aes-decrypted {          background: #1a202c;          border-color: #065f46;          color: #e2e8f0;        }      }    </style>  <p>为了安全本站使用 AES-256 加密算法确保信息安全，通过加密信息+密码的形式查看。<br>请妥善保管此账号密码，使用该账号登录服务器，以获取相应的访问权限，确保数据安全。若后续需要修改密码，可联系系统管理员进行操作。</p><h2 id="二、教学篇"><a href="#二、教学篇" class="headerlink" title="二、教学篇"></a>二、教学篇</h2><h3 id="（一）Windows-系统访问-SMB-多协议同时共享"><a href="#（一）Windows-系统访问-SMB-多协议同时共享" class="headerlink" title="（一）Windows 系统访问 SMB&#x2F;多协议同时共享"></a>（一）Windows 系统访问 SMB&#x2F;多协议同时共享</h3><p>现在教大家如何从 Windows 系统访问共享目录。</p><ol><li><strong>步骤 1.1：打开映射网络驱动器窗口</strong><br>首先打开“文件资源管理器”，你可以通过点击任务栏中的文件夹图标来快速启动它。进入文件资源管理器后，点击左侧导航栏中的“此电脑”选项。接着，在窗口左上角找到并点击“计算机”选项卡，在展开的菜单中，选择“映射网络驱动器”。另外，你也可以通过点击左侧导航栏中的“网络”选项，然后在窗口中找到并点击“映射网络驱动器”来实现同样的操作。</li></ol><p><img src="https://upyun.eryang.top/img/winsmbjc1.png" alt="打开映射网络驱动器窗口"></p><ol start="2"><li><strong>步骤 1.2：填写共享路径</strong><br>在弹出的“映射网络驱动器”窗口中，“文件夹”位置需要填写刚才 SMB 分享的路径。在下方有明确提示，双斜杠后直接接服务器的 IP 地址，你可以选择填写<code>\\yusi.local</code>或者<code>\\192.168.31.180</code>（注意：确保你填写的 IP 地址是服务器当前正确的地址，若服务器 IP 有变动，请及时获取新地址进行填写）。如果不清楚服务器的具体地址，可以联系网络管理员进行确认。</li></ol><p><img src="https://upyun.eryang.top/img/winsmbjc2.png" alt="填写共享路径"></p><ol start="3"><li><strong>步骤 1.3：完成连接</strong><br>填写好路径后，点击“浏览”按钮，系统会提示你输入账号密码。</li></ol><p><img src="https://upyun.eryang.top/img/winsmbjc3.png" alt="打开连接服务器窗口"></p><p>输入之前提供的账号和密码，输入完成后点击“完成”按钮。此时，在“此电脑”中，你就能直接访问 SMB 服务分享出来的目录了，就像访问本地磁盘一样方便地进行文件的查看、上传和下载等操作。</p><p><img src="https://upyun.eryang.top/img/winsmbjc4.png" alt="填写服务器地址并连接"></p><p><img src="https://upyun.eryang.top/img/winsmbjc5.png" alt="完成连接"></p><h3 id="（二）Mac-系统访问-SMB-多协议同时共享"><a href="#（二）Mac-系统访问-SMB-多协议同时共享" class="headerlink" title="（二）Mac 系统访问 SMB&#x2F;多协议同时共享"></a>（二）Mac 系统访问 SMB&#x2F;多协议同时共享</h3><ol><li><p><strong>步骤 2.1：打开连接服务器窗口</strong><br>在 Mac 系统的桌面上，点击菜单栏中的“前往”选项，在弹出的下拉菜单中，选择“连接服务器”。这一步操作是为了打开连接服务器的对话框，以便输入服务器的连接信息。</p></li><li><p><strong>步骤 2.2：填写服务器地址并连接</strong><br>在弹出的“连接服务器”窗口的地址栏中，填写刚才 SMB 分享的路径。这里需要注意，Mac 系统和 Windows 系统的填写方式有所不同，Mac 系统需要在地址前输入<code>smb://</code>，然后再接服务器的 IP 地址，例如<code>smb://yusi.local</code>或者<code>smb://192.168.31.10</code>。填写完成后，点击“连接”按钮，系统将尝试与服务器建立连接。如果遇到连接失败的情况，请检查网络连接是否正常，以及输入的地址是否正确。</p></li></ol><p><img src="https://upyun.eryang.top/img/macsmbjc1.png" alt="填写服务器地址并连接"></p><ol start="3"><li><strong>步骤 2.3：登录并选择装载的卷宗</strong><br>输入用户名和密码后，系统会列出服务器上可供访问的卷宗。你可以根据自己的需求选择要装载的卷宗，选择完成后点击“确定”或“连接”按钮（具体按钮名称可能因系统版本略有差异），之后就可以在 Mac 系统中访问服务器上的共享文件了。在访达中，你可以像操作本地文件一样对共享文件进行操作，如打开、编辑、复制、删除等。</li></ol><p><img src="https://upyun.eryang.top/img/macsmbjc2.png" alt="登录并选择装载的卷宗"></p><h2 id="三、常见问题及解决方法"><a href="#三、常见问题及解决方法" class="headerlink" title="三、常见问题及解决方法"></a>三、常见问题及解决方法</h2><h3 id="（一）连接失败问题"><a href="#（一）连接失败问题" class="headerlink" title="（一）连接失败问题"></a>（一）连接失败问题</h3><ol><li><strong>报错信息：“网页解析失败，可能是不支持的网页类型，请检查网页或稍后重试”</strong><br>这可能是由于访问时使用的客户端软件（如浏览器）不支持服务器的某些功能或协议，或者服务器返回的数据格式无法被正确解析。<br>解决方法：尝试更换浏览器，如从 Chrome 更换为 Firefox 或 Safari；或者更新当前使用的浏览器至最新版本，以确保其支持最新的网络协议和数据格式。另外，检查服务器的运行状态，看是否存在故障导致数据异常。</li><li><strong>报错信息：“URL 拼写可能存在错误，请检查”</strong><br>这种情况通常是在输入服务器地址时出现了拼写错误，比如字母大小写错误、遗漏了某些字符或者使用了错误的分隔符等。<br>解决方法：仔细核对服务器地址，确保其准确性。建议从手册中复制正确的地址进行粘贴，避免手动输入可能出现的错误。如果仍然无法连接，检查网络配置，如路由器设置、DNS 配置等是否正确。</li></ol><h3 id="（二）权限问题"><a href="#（二）权限问题" class="headerlink" title="（二）权限问题"></a>（二）权限问题</h3><p>如果在访问共享目录时遇到权限不足的提示，无法查看或操作某些文件，可能是因为当前账号的权限设置不够。<br>解决方法：联系系统管理员，申请更高的权限，或者检查账号密码是否正确输入，确保使用的是具有相应权限的账号登录。</p>]]></content>
    
    
    <summary type="html">《网络存储器使用手册 1.3》详解网络存储器的使用方法，包含服务器基础信息（地址、账号密码等），分步骤介绍 Windows 和 Mac 系统访问 SMB / 多协议共享的操作流程，还列举了连接失败、权限问题等常见问题及解决方法，助你顺利使用网络存储器进行文件共享与访问。</summary>
    
    
    
    <category term="技术指南" scheme="https://www.eryang.top/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/"/>
    
    
    <category term="网络存储" scheme="https://www.eryang.top/tags/%E7%BD%91%E7%BB%9C%E5%AD%98%E5%82%A8/"/>
    
    <category term="SMB 共享" scheme="https://www.eryang.top/tags/SMB-%E5%85%B1%E4%BA%AB/"/>
    
    <category term="服务器连接" scheme="https://www.eryang.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
</feed>
